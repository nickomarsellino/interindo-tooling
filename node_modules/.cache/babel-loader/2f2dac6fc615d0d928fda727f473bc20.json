{"ast":null,"code":"import firebase, { database } from \"../../firebase\";\nexport const actionUserName = () => dispatch => {\n  setTimeout(() => {\n    return dispatch({\n      type: \"CHANGE_USER\",\n      value: \"Raissa\"\n    });\n  }, 1500);\n};\nexport const loginUserAPI = data => dispatch => {\n  console.log(data);\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: \"CHANGE_LOADING\",\n      value: true\n    });\n    firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n      console.log(\"Response \", res);\n      const userData = {\n        email: res.user.email,\n        uid: res.user.uid,\n        emailVerified: res.user.emailVerified,\n        refreshToken: res.user.refreshToken\n      }; // Set isLoading jadi false lagi setelah selesai\n\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        value: false\n      });\n      dispatch({\n        type: \"CHANGE_ISLOGIN\",\n        value: true\n      });\n      dispatch({\n        type: \"CHANGE_USER\",\n        value: userData\n      });\n      resolve(userData);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        value: false\n      });\n      dispatch({\n        type: \"CHANGE_ISLOGIN\",\n        value: false\n      });\n      dispatch({\n        type: \"SHOW_ERRORMESSAGE\",\n        value: errorMessage\n      });\n      reject(false);\n    });\n  });\n};\nexport const logOutUser = data => dispatch => {\n  firebase.auth().signOut().then(function () {\n    //Sign-out successful.\n    localStorage.clear();\n    console.log(\"Sukses Sign Out !\");\n  }).catch(function (error) {// An error happened.\n  });\n}; // Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\n\nexport const addDataToAPI = data => dispatch => {\n  database.ref(\"Products/\" + data.category).push({\n    title: data.title,\n    content: data.content,\n    category: data.category,\n    imageUrl: data.imageUrl,\n    createdDate: data.createdDate,\n    createdBy: data.userId\n  });\n  var urlNotes = firebase.database().ref(\"Products/\" + data.category);\n  urlNotes.on(\"value\", function (snapshot) {\n    // ubah object jadi Array\n    const data = [];\n\n    if (snapshot.val()) {\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\n        data.push({\n          id: key,\n          data: snapshot.val()[key]\n        });\n      });\n    } // console.log(\"Data untuk di Modal \", data);\n\n\n    if (data[0].data.dummy) {\n      console.log(\"HALO\");\n    }\n\n    dispatch({\n      type: \"SHOW_MORE_IMAGE\",\n      value: data\n    });\n  });\n}; // Get data api using redux\n\nexport const getDataFromAPI = userId => dispatch => {\n  // var urlNotes = firebase.database().ref(\"Products/CuttingTool\");\n  var urlNotes = firebase.database().ref(\"Products/\");\n  return new Promise((resolve, reject) => {\n    urlNotes.on(\"value\", function (snapshot) {\n      // ubah object jadi Array\n      //   const data = [\n      //     { first_nom: 'Lazslo', last_nom: 'Jamf'     },\n      // { first_nom: 'Aig',    last_nom: 'Bodine'   },\n      // { first_nom: 'Pirate', last_nom: 'Prentice' }\n      //   ];\n      const data = [];\n\n      if (snapshot.val()) {\n        Object.keys(snapshot.val() && snapshot.val()).map(key => {\n          data.push({\n            id: key,\n            data: snapshot.val()[key]\n          });\n        });\n      }\n\n      function compare(a, b) {\n        if (a.id < b.id) {\n          return -1;\n        }\n\n        if (a.id > b.id) {\n          return 1;\n        }\n\n        return 0;\n      }\n\n      data.sort(compare);\n      console.log(\"DATA BUAT CEK GET API \", data);\n      dispatch({\n        type: \"SET_NOTES\",\n        value: data\n      });\n      resolve(snapshot.val());\n    });\n  });\n};\nexport const addProductsDetail = data => dispatch => {\n  database.ref(\"Products/\" + data.productsId).push({\n    imageUrl: data.imageUrl\n  });\n  console.log(\"result action \", data);\n}; // Get data api using redux\n\nexport const getDetailProductImages = data => dispatch => {\n  var urlNotes = firebase.database().ref(\"Products/\" + data.category);\n  urlNotes.on(\"value\", function (snapshot) {\n    // ubah object jadi Array\n    const data = [];\n\n    if (snapshot.val()) {\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\n        data.push({\n          id: key,\n          data: snapshot.val()[key]\n        });\n      });\n    } // console.log(\"Nih buat sorting\", data);\n    // if(data[0].data.dummy) {\n    //   const dummyId = data[0].id;\n    //   console.log(\"ada datadummy\", dummyId)\n    //   this.deleteCategori(data, dummyId)\n    // }\n    // else {\n    //   console.log(\"tidak ada ada tidak ada ada tidak\")\n    // }\n\n\n    dispatch({\n      type: \"SHOW_MORE_IMAGE\",\n      value: data\n    });\n  });\n};\nexport const deleteMainProduct = data => dispatch => {\n  console.log(\"Deleted product data\", data); // Cannot delete the image when there is only one image left\n\n  if (data.totalImage == \"1\") {\n    alert(\"You must at least have 1 image for each category!\");\n  } else {\n    database.ref(\"Products/\" + data.category + \"/\" + data.productId).remove();\n  }\n};\nexport const addCategory = data => dispatch => {\n  database.ref(\"Products/\" + data.category).push({\n    dummy: data.category\n  });\n};\nexport const deleteCategory = data => dispatch => {\n  if (data.category == \"Arbor\") {\n    alert(\"Cannot delete your main product!\");\n  } else {\n    database.ref(\"Products/\" + data.category).remove();\n  }\n};\nexport const deleteDummy = data => dispatch => {\n  console.log(\"Delete Dummy DATA \", data); // database.ref(\"Products/\" + data.category).remove();\n};","map":{"version":3,"sources":["C:/File Ch/test1 updates/asdf/src/config/redux/action/index.js"],"names":["firebase","database","actionUserName","dispatch","setTimeout","type","value","loginUserAPI","data","console","log","Promise","resolve","reject","auth","signInWithEmailAndPassword","email","password","then","res","userData","user","uid","emailVerified","refreshToken","catch","error","errorCode","code","errorMessage","message","logOutUser","signOut","localStorage","clear","addDataToAPI","ref","category","push","title","content","imageUrl","createdDate","createdBy","userId","urlNotes","on","snapshot","val","Object","keys","map","key","id","dummy","getDataFromAPI","compare","a","b","sort","addProductsDetail","productsId","getDetailProductImages","deleteMainProduct","totalImage","alert","productId","remove","addCategory","deleteCategory","deleteDummy"],"mappings":"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","sourcesContent":["import firebase, { database } from \"../../firebase\";\r\n\r\nexport const actionUserName = () => dispatch => {\r\n  setTimeout(() => {\r\n    return dispatch({ type: \"CHANGE_USER\", value: \"Raissa\" });\r\n  }, 1500);\r\n};\r\n\r\nexport const loginUserAPI = data => dispatch => {\r\n  console.log(data);\r\n  return new Promise((resolve, reject) => {\r\n    dispatch({ type: \"CHANGE_LOADING\", value: true });\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(data.email, data.password)\r\n      .then(res => {\r\n        console.log(\"Response \", res);\r\n        const userData = {\r\n          email: res.user.email,\r\n          uid: res.user.uid,\r\n          emailVerified: res.user.emailVerified,\r\n          refreshToken: res.user.refreshToken\r\n        };\r\n        // Set isLoading jadi false lagi setelah selesai\r\n        dispatch({ type: \"CHANGE_LOADING\", value: false });\r\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: true });\r\n        dispatch({ type: \"CHANGE_USER\", value: userData });\r\n        resolve(userData);\r\n      })\r\n      .catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode);\r\n        console.log(errorMessage);\r\n        dispatch({ type: \"CHANGE_LOADING\", value: false });\r\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: false });\r\n        dispatch({ type: \"SHOW_ERRORMESSAGE\", value: errorMessage });\r\n        reject(false);\r\n      });\r\n  });\r\n};\r\n\r\nexport const logOutUser = data => dispatch => {\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(function() {\r\n      //Sign-out successful.\r\n      localStorage.clear();\r\n      console.log(\"Sukses Sign Out !\");\r\n    })\r\n    .catch(function(error) {\r\n      // An error happened.\r\n    });\r\n};\r\n\r\n// Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\r\nexport const addDataToAPI = data => dispatch => {\r\n  database.ref(\"Products/\" + data.category).push({\r\n    title: data.title,\r\n    content: data.content,\r\n    category: data.category,\r\n    imageUrl: data.imageUrl,\r\n    createdDate: data.createdDate,\r\n    createdBy: data.userId\r\n  });\r\n\r\n  var urlNotes = firebase.database().ref(\"Products/\" + data.category);\r\n  urlNotes.on(\"value\", function(snapshot) {\r\n    // ubah object jadi Array\r\n    const data = [];\r\n    if (snapshot.val()) {\r\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\r\n        data.push({\r\n          id: key,\r\n          data: snapshot.val()[key]\r\n        });\r\n      });\r\n    }\r\n    // console.log(\"Data untuk di Modal \", data);\r\n    if(data[0].data.dummy){\r\n        console.log(\"HALO\")\r\n      }\r\n    dispatch({ type: \"SHOW_MORE_IMAGE\", value: data });\r\n  });\r\n};\r\n\r\n// Get data api using redux\r\nexport const getDataFromAPI = userId => dispatch => {\r\n  // var urlNotes = firebase.database().ref(\"Products/CuttingTool\");\r\n  var urlNotes = firebase.database().ref(\"Products/\");\r\n  return new Promise((resolve, reject) => {\r\n    urlNotes.on(\"value\", function(snapshot) {\r\n      // ubah object jadi Array\r\n    //   const data = [\r\n    //     { first_nom: 'Lazslo', last_nom: 'Jamf'     },\r\n    // { first_nom: 'Aig',    last_nom: 'Bodine'   },\r\n    // { first_nom: 'Pirate', last_nom: 'Prentice' }\r\n    //   ];\r\n      const data = [];\r\n      if (snapshot.val()) {\r\n        Object.keys(snapshot.val() && snapshot.val()).map(key => {\r\n          data.push({\r\n            id: key,\r\n            data: snapshot.val()[key]\r\n          });\r\n        });\r\n      }\r\n      function compare( a, b ) {\r\n        if ( a.id < b.id ){\r\n          return -1;\r\n        }\r\n        if ( a.id > b.id ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }      \r\n      data.sort( compare );\r\n      console.log(\"DATA BUAT CEK GET API \", data);\r\n      dispatch({ type: \"SET_NOTES\", value: data });\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport const addProductsDetail = data => dispatch => {\r\n  database.ref(\"Products/\" + data.productsId).push({\r\n    imageUrl: data.imageUrl\r\n  });\r\n  console.log(\"result action \", data);\r\n};\r\n\r\n// Get data api using redux\r\nexport const getDetailProductImages = data => dispatch => {\r\n  var urlNotes = firebase.database().ref(\"Products/\" + data.category);\r\n  urlNotes.on(\"value\", function(snapshot) {\r\n    // ubah object jadi Array\r\n    const data = [];\r\n    if (snapshot.val()) {\r\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\r\n        data.push({\r\n          id: key,\r\n          data: snapshot.val()[key]\r\n          })\r\n        });\r\n    }\r\n    // console.log(\"Nih buat sorting\", data);\r\n    // if(data[0].data.dummy) {\r\n    //   const dummyId = data[0].id;\r\n    //   console.log(\"ada datadummy\", dummyId)\r\n    //   this.deleteCategori(data, dummyId)\r\n    // }\r\n    // else {\r\n    //   console.log(\"tidak ada ada tidak ada ada tidak\")\r\n    // }\r\n    dispatch({ type: \"SHOW_MORE_IMAGE\", value: data });\r\n  });\r\n};\r\n\r\nexport const deleteMainProduct = data => dispatch => {\r\n  console.log(\"Deleted product data\", data);\r\n  // Cannot delete the image when there is only one image left\r\n  if (data.totalImage == \"1\") {\r\n    alert(\"You must at least have 1 image for each category!\");\r\n  } else {\r\n    database.ref(\"Products/\" + data.category + \"/\" + data.productId).remove();\r\n  }\r\n};\r\n\r\nexport const addCategory = data => dispatch => {\r\n  database.ref(\"Products/\" + data.category).push({\r\n    dummy: data.category\r\n  });\r\n};\r\n\r\nexport const deleteCategory = data => dispatch => {\r\n  if (data.category == \"Arbor\") {\r\n    alert(\"Cannot delete your main product!\");\r\n  } else {\r\n    database.ref(\"Products/\" + data.category).remove();\r\n  }\r\n};\r\n\r\nexport const deleteDummy = data => dispatch => {\r\n  console.log(\"Delete Dummy DATA \", data)\r\n    // database.ref(\"Products/\" + data.category).remove();\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}