{"ast":null,"code":"var _jsxFileName = \"/Users/aleph/Documents/interindo-tooling/src/components/design-system/LoginForm/index.js\";\nimport React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport { connect } from 'react-redux';\nimport { Card, Form } from 'semantic-ui-react';\nimport { loginUserAPI } from '../../../config/redux/action';\nimport { H2 } from '../../../components'; // data dummy\n\nimport bannerImg from '../../../assets/images/dummy/hero-banner.jpg';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleSubmit = async () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const history = this.props.history;\n      const res = await this.props.loginAPI({\n        email,\n        password\n      }).catch(err => err);\n      console.log(res);\n\n      if (res) {\n        localStorage.setItem('userData', JSON.stringify(res));\n        this.setState({\n          email: '',\n          password: '',\n          isLoginStatus: true\n        });\n        history.push('/auth/admin/dashboard');\n      } else {\n        console.log(\"GAGAL !\");\n      }\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return React.createElement(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ds-login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(H2, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"LOGIN FORM\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      required: true,\n      label: \"E-mail\",\n      placeholder: \"Input E-mail\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      required: true,\n      label: \"Password\",\n      placeholder: \"Input Password\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontSize: '14px',\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.errorMessage), React.createElement(Form.Button, {\n      color: \"yellow\",\n      content: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nLoginForm.propTypes = {\n  bannerImage: PropTypes.string,\n  bannerTitle: PropTypes.string\n};\nLoginForm.defaultProps = {\n  bannerImage: bannerImg,\n  bannerTitle: ''\n};\n\nconst reduxState = state => ({\n  isLoading: state.isLoading,\n  errorMessage: state.errorMessage\n});\n\nconst reduxDispatch = dispatch => ({\n  loginAPI: data => dispatch(loginUserAPI(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(LoginForm);","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/components/design-system/LoginForm/index.js"],"names":["React","Component","Fade","PropTypes","connect","Card","Form","loginUserAPI","H2","bannerImg","LoginForm","state","email","password","handleChange","e","name","value","setState","handleSubmit","history","props","res","loginAPI","catch","err","console","log","localStorage","setItem","JSON","stringify","isLoginStatus","push","render","fontSize","color","errorMessage","propTypes","bannerImage","string","bannerTitle","defaultProps","reduxState","isLoading","reduxDispatch","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport { connect } from 'react-redux';\nimport { Card, Form } from 'semantic-ui-react'\nimport { loginUserAPI } from '../../../config/redux/action';\nimport { H2 } from '../../../components'\n\n// data dummy\nimport bannerImg from '../../../assets/images/dummy/hero-banner.jpg';\n\nclass LoginForm extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = async () => {\n    const { email, password } = this.state;\n    const { history } = this.props;\n    const res = await this.props.loginAPI({email, password}).catch(err => err);\n    console.log(res);\n    if(res) { \n        localStorage.setItem('userData', JSON.stringify(res))\n        this.setState ({\n            email: '',\n            password: '',\n            isLoginStatus: true\n        })\n        history.push('/auth/admin/dashboard');\n    }\n    else {\n        console.log(\"GAGAL !\");\n    }\n  }\n\n  render() {\n    const {\n      state: { email, password },\n      // props: {\n      //   bannerImage,\n      //   bannerTitle\n      // }\n    } = this;\n    return (\n      <Fade>\n        <div className=\"ds-login-form\">\n          <Card>\n            <H2>LOGIN FORM</H2>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Input\n                required\n                label='E-mail'\n                placeholder='Input E-mail'\n                type='email'\n                name='email'\n                value={email}\n                onChange={this.handleChange}\n              />\n              <Form.Input\n                required\n                label='Password'\n                placeholder='Input Password'\n                type='password'\n                name='password'\n                value={password}\n                onChange={this.handleChange}\n              />\n              <p style={{fontSize: '14px', color: 'red'}}>{this.props.errorMessage}</p>\n              <Form.Button color='yellow' content='Login' />\n            </Form>\n          </Card>\n        </div>\n      </Fade>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  bannerImage: PropTypes.string,\n  bannerTitle: PropTypes.string,\n}\n\nLoginForm.defaultProps = {\n  bannerImage: bannerImg,\n  bannerTitle: '',\n}\n\nconst reduxState = (state) => ({\n  isLoading: state.isLoading,\n  errorMessage: state.errorMessage\n})\n\nconst reduxDispatch = (dispatch) => ({\n  loginAPI: (data) => dispatch(loginUserAPI(data))\n})\n\n\nexport default connect(reduxState, reduxDispatch)(LoginForm);"]},"metadata":{},"sourceType":"module"}