{"ast":null,"code":"var _jsxFileName = \"/Users/aleph/Documents/interindo-tooling/src/components/design-system/ImageCardList/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\nimport { Button } from 'semantic-ui-react'; // data dummy\n\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPopup: false\n    };\n\n    this.handleShowPopup = status => {\n      this.setState({\n        showPopup: !status\n      });\n    };\n\n    this.handleClosePopup = status => {\n      this.setState({\n        showPopup: !status\n      });\n    };\n  }\n\n  render() {\n    const handleShowPopup = this.handleShowPopup,\n          handleClosePopup = this.handleClosePopup,\n          showPopup = this.state.showPopup,\n          _this$props = this.props,\n          className = _this$props.className,\n          data = _this$props.data;\n    const classNames = classname('ds-image-card-list', className);\n    return React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"categoryMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, notes.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        className: \"gridContainer\",\n        key: bebas.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          cursor: \"pointer\",\n          backgroundColor: \"cyan\",\n          width: \"-webkit-max-content\"\n          /* Chrome */\n\n        },\n        onClick: () => {\n          this.getDetail(bebas);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, bebas.id)));\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Tidak ada Dataaa\")), React.createElement(ImageModal, {\n      showPopup: showPopup,\n      handleClosePopup: handleClosePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string\n  })\n};\nImageCardList.defaultProps = {\n  className: '',\n  data: []\n};\nexport default ImageCardList;","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/components/design-system/ImageCardList/index.js"],"names":["React","Component","PropTypes","classname","FadeIn","LazyLoad","ImageCard","ImageModal","Button","productImg1","productImg2","ImageCardList","state","showPopup","handleShowPopup","status","setState","handleClosePopup","render","props","className","data","classNames","notes","length","map","bebas","id","cursor","backgroundColor","width","getDetail","propTypes","string","shape","imageId","imageCard","defaultProps"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\nimport { Button } from 'semantic-ui-react';\n\n// data dummy\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n\n  // componentDidMount(){\n  //   this.handleClickProductCard()\n  // }\n\n  // componentWillUnmount(){\n  //   this.handleClickProductCard()\n  // }\n\n  state = {\n    showPopup: false\n  }\n\n  handleShowPopup = (status) => {\n    this.setState({\n      showPopup: !status\n    });\n  };\n\n  handleClosePopup = (status) => {\n    this.setState({\n      showPopup: !status\n    });\n  };\n\n  render() {\n    const {\n      handleShowPopup,\n      handleClosePopup,\n      state: {\n        showPopup\n      },\n      props: {\n        className,\n        data\n      }\n    } = this;\n    const classNames = classname('ds-image-card-list', className);\n\n    return (\n      <FadeIn>\n        <div className=\"categoryMenu\">\n          {notes.length !== 0 ? (\n            <Fragment>\n              {notes.map(bebas => {\n                return (\n                  <div className=\"gridContainer\" key={bebas.id}>\n                    <div>\n                      <p\n                        style={{\n                          cursor: \"pointer\",\n                          backgroundColor: \"cyan\",\n                          width: \"-webkit-max-content\" /* Chrome */\n                        }}\n                        onClick={() => {\n                          this.getDetail(bebas);\n                        }}\n                      >\n                        {bebas.id}\n                      </p>\n                    </div>\n                  </div>\n                );\n              })}\n            </Fragment>\n          ) : (\n              <p>Tidak ada Dataaa</p>\n            )}\n        </div>\n\n        {/* Pop Up Image */}\n        <ImageModal\n          showPopup={showPopup}\n          handleClosePopup={handleClosePopup}\n        />\n      </FadeIn>\n    );\n  }\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string,\n  })\n}\n\nImageCardList.defaultProps = {\n  className: '',\n  data: [],\n}\n\nexport default ImageCardList;\n"]},"metadata":{},"sourceType":"module"}