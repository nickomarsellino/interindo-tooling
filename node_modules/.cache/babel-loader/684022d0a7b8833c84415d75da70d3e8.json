{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\test1 updates\\\\asdf\\\\src\\\\container\\\\pages\\\\AdminPages\\\\Dashboard\\\\index.js\";\nimport React, { Component, Fragment, useState, useEffect } from \"react\";\nimport { addDataToAPI, getDataFromAPI, logOutUser, getDetailProductImages } from \"../../../../config/redux/action\";\nimport { connect } from \"react-redux\";\nimport { storage } from \"../../../../config/firebase\"; // import * as moment from \"moment\";\n\nimport NavbarAdmin from \"../NavbarAdmin\";\nimport ImageModal from \"../Modal\";\nimport ConfirmDeleteModal from \"../ConfirmDeleteModal\";\nimport { Card, Icon, Image, Dropdown, Grid, GridColumn } from \"semantic-ui-react\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      // Bingung kalo ga di ganti kategorinya langsung clic should be Arbor\n      category: \"Arbor\",\n      createdDate: new Date().getTime(),\n      createdBy: \"\",\n      image: null,\n      imageUrl: \"\",\n      onModalShow: false,\n      onConfirmModalShow: false,\n      productsDetail: \"\",\n      productsId: \"\",\n      email: \"\",\n      detailDataUtama: \"\",\n      isLoading: false,\n      loadingGif: \"ui primary button\",\n      data: [],\n      testState: 1\n    };\n\n    this.handleSaveNote = e => {\n      e.preventDefault(); // GET LOCAL STORAGE\n\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData);\n      const image = this.state.image;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function .... Disabled the button\n        this.setState({\n          isLoading: true,\n          loadingGif: \"ui primary loading button\"\n        });\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(imageUrl => {\n          console.log(imageUrl);\n          this.setState({\n            imageUrl\n          });\n          const data = {\n            title: this.state.title,\n            content: this.state.content,\n            category: this.state.category,\n            createdDate: this.state.createdDate,\n            userId: userData.uid,\n            imageUrl: this.state.imageUrl\n          };\n          console.log(\"Data \", data);\n          this.props.saveNotes(data); // Enabled again the Button\n\n          this.setState({\n            image: \"\",\n            isLoading: false,\n            loadingGif: \"ui primary button\" // clear form\n\n          });\n        });\n      });\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n\n      console.log(this.state.image);\n    };\n\n    this.getDetail = e => {\n      // this.setState({\n      //   onModalShow: true,\n      //   productsDetail: e.data,\n      //   productsId: e.id,\n      //   detailDataUtama: e.data.DataUtama\n      // });\n      // // Show the image list wihtout click button\n      // const productsId = {\n      //   productsId: e.id\n      // };\n      const data = {\n        category: e.id\n      };\n      this.props.showDetailProductImages(data);\n      console.log(\"E pas klik detail \", e);\n    };\n\n    this.onTrashIconClick = e => {\n      console.log(e);\n      this.setState({\n        onConfirmModalShow: true,\n        detailDataUtama: e.data,\n        productsId: e.id\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        onModalShow: false,\n        onConfirmModalShow: false\n      });\n    };\n\n    this.logOut = () => {\n      console.log(\"TEST\");\n      this.props.logout();\n      const history = this.props.history;\n      history.push(\"/auth/admin/login\");\n    };\n\n    this.dashboardURL = () => {\n      const history = this.props.history;\n      history.push(\"/auth/admin/dashboard\");\n    };\n\n    this.categoryURL = () => {\n      const history = this.props.history;\n      history.push(\"/auth/admin/category\");\n    };\n  }\n\n  // const [posts, setPosts] = useState([]);\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (userData) {\n      this.setState({\n        email: userData.email\n      });\n      this.props.getNotes(userData.uid);\n    } else {\n      this.props.history.push(\"/auth/admin/login\");\n    }\n\n    var storageRef = storage.ref(); // // ******IGNORE******//\n    // fetch(\"http://localhost:57698/api/student/getstudentdata\").then(\n    //   async response => {\n    //     const data = await response.json();\n    //     console.log(\"Data API CH \", data);\n    //   }\n    // );\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          createdDate = _this$state.createdDate,\n          image = _this$state.image,\n          imageUrl = _this$state.imageUrl;\n    const _this$props = this.props,\n          notes = _this$props.notes,\n          moreImage = _this$props.moreImage; // console.log(\"Hasil notes \", notes.length);\n\n    console.log(\"Detail product image \", this.props.notes); // console.log(\"this.state.isLoading \", this.state.isLoading);\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(ImageModal, {\n      onModalShow: this.state.onModalShow,\n      onCloseClick: () => this.onCloseClick(),\n      productsId: this.state.productsId,\n      productsDetail: this.state.productsDetail,\n      detailDataUtama: this.state.detailDataUtama,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(ConfirmDeleteModal, {\n      onConfirmModalShow: this.state.onConfirmModalShow,\n      onCloseClick: () => this.onCloseClick(),\n      productsId: this.state.productsId,\n      detailDataUtama: this.state.detailDataUtama,\n      totalImage: this.props.moreImage.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(NavbarAdmin, {\n      userEmail: this.state.email,\n      onLogOutClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"ui form\",\n      style: {\n        width: \"40%\",\n        marginTop: \"15px\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"first-name\",\n      onChange: e => this.onInputChange(e, \"title\"),\n      required: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"last-name\",\n      onChange: e => this.onInputChange(e, \"content\"),\n      required: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      style: {\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Category\"), notes.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"select\", {\n        style: {\n          borderColor: \"pink\"\n        },\n        required: \"true\",\n        onChange: e => this.onInputChange(e, \"category\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Arbor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, notes.id));\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: this.state.loadingGif,\n      type: \"submit\",\n      style: {\n        fontSize: \"14px\"\n      },\n      onClick: this.handleSaveNote,\n      disabled: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), notes.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        className: \"gridContainer\",\n        key: bebas.id,\n        style: {\n          display: \"inline-block\",\n          width: \"25%\",\n          \"text-align\": \"-webkit-center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          cursor: \"pointer\",\n          width: \"-webkit-max-content\"\n          /* Chrome */\n\n        },\n        onClick: () => {\n          this.getDetail(bebas);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, bebas.id)));\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Loading...\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        left: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, moreImage.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, moreImage.map(bebas => {\n      return React.createElement(\"div\", {\n        class: \"img-wrap\",\n        style: {\n          // height: \"195px\",\n          width: \"30%\",\n          left: \"0\",\n          marginLeft: \"1.6%\",\n          marginRight: \"1.6%\" // marginTop: \"5%\"\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: bebas.data.imageUrl,\n        style: {\n          padding: \"5px\",\n          height: \"195px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, bebas.data.title))), React.createElement(\"span\", {\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        onClick: () => {\n          this.onTrashIconClick(bebas);\n        },\n        name: \"trash alternate outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      })));\n    })) : React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Please click the category to load the result..\"))));\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes,\n  moreImage: state.moreImage // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data)),\n  logout: data => dispatch(logOutUser()),\n  showDetailProductImages: data => dispatch(getDetailProductImages(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["C:/File Ch/test1 updates/asdf/src/container/pages/AdminPages/Dashboard/index.js"],"names":["React","Component","Fragment","useState","useEffect","addDataToAPI","getDataFromAPI","logOutUser","getDetailProductImages","connect","storage","NavbarAdmin","ImageModal","ConfirmDeleteModal","Card","Icon","Image","Dropdown","Grid","GridColumn","Dashboard","state","title","content","category","createdDate","Date","getTime","createdBy","image","imageUrl","onModalShow","onConfirmModalShow","productsDetail","productsId","email","detailDataUtama","isLoading","loadingGif","data","testState","handleSaveNote","e","preventDefault","userData","JSON","parse","localStorage","getItem","console","log","uploadTask","ref","name","put","on","snapshot","setState","error","child","getDownloadURL","then","userId","uid","props","saveNotes","onInputChange","type","target","value","handleImageChange","files","getDetail","id","showDetailProductImages","onTrashIconClick","onCloseClick","logOut","logout","history","push","dashboardURL","categoryURL","componentDidMount","getNotes","storageRef","render","notes","moreImage","length","width","marginTop","fontSize","map","bebas","borderColor","display","cursor","left","marginLeft","marginRight","padding","height","textAlign","reduxState","user","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  addDataToAPI,\r\n  getDataFromAPI,\r\n  logOutUser,\r\n  getDetailProductImages\r\n} from \"../../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { storage } from \"../../../../config/firebase\";\r\n// import * as moment from \"moment\";\r\nimport NavbarAdmin from \"../NavbarAdmin\";\r\nimport ImageModal from \"../Modal\";\r\nimport ConfirmDeleteModal from \"../ConfirmDeleteModal\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Dropdown,\r\n  Grid,\r\n  GridColumn\r\n} from \"semantic-ui-react\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    // Bingung kalo ga di ganti kategorinya langsung clic should be Arbor\r\n    category: \"Arbor\",\r\n    createdDate: new Date().getTime(),\r\n    createdBy: \"\",\r\n    image: null,\r\n    imageUrl: \"\",\r\n    onModalShow: false,\r\n    onConfirmModalShow: false,\r\n    productsDetail: \"\",\r\n    productsId: \"\",\r\n    email: \"\",\r\n    detailDataUtama: \"\",\r\n    isLoading: false,\r\n    loadingGif: \"ui primary button\",\r\n    data: [],\r\n    testState: 1\r\n  };\r\n\r\n  // const [posts, setPosts] = useState([]);\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    if (userData) {\r\n      this.setState({\r\n        email: userData.email\r\n      });\r\n      this.props.getNotes(userData.uid);\r\n    } else {\r\n      this.props.history.push(\"/auth/admin/login\");\r\n    }\r\n\r\n    var storageRef = storage.ref();\r\n\r\n    // // ******IGNORE******//\r\n    // fetch(\"http://localhost:57698/api/student/getstudentdata\").then(\r\n    //   async response => {\r\n    //     const data = await response.json();\r\n    //     console.log(\"Data API CH \", data);\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  handleSaveNote = e => {\r\n    e.preventDefault();\r\n    // GET LOCAL STORAGE\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function .... Disabled the button\r\n        this.setState({\r\n          isLoading: true,\r\n          loadingGif: \"ui primary loading button\"\r\n        });\r\n      },\r\n      error => {\r\n        // error function ....\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ....\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(imageUrl => {\r\n            console.log(imageUrl);\r\n            this.setState({ imageUrl });\r\n\r\n            const data = {\r\n              title: this.state.title,\r\n              content: this.state.content,\r\n              category: this.state.category,\r\n              createdDate: this.state.createdDate,\r\n              userId: userData.uid,\r\n              imageUrl: this.state.imageUrl\r\n            };\r\n            console.log(\"Data \", data);\r\n\r\n            this.props.saveNotes(data);\r\n\r\n            // Enabled again the Button\r\n            this.setState({\r\n              image: \"\",\r\n              isLoading: false,\r\n              loadingGif: \"ui primary button\"\r\n              // clear form\r\n            });\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n    console.log(this.state.image);\r\n  };\r\n\r\n  getDetail = e => {\r\n    // this.setState({\r\n    //   onModalShow: true,\r\n    //   productsDetail: e.data,\r\n    //   productsId: e.id,\r\n    //   detailDataUtama: e.data.DataUtama\r\n    // });\r\n\r\n    // // Show the image list wihtout click button\r\n    // const productsId = {\r\n    //   productsId: e.id\r\n    // };\r\n\r\n    const data = {\r\n      category: e.id\r\n    };\r\n\r\n    this.props.showDetailProductImages(data);\r\n    console.log(\"E pas klik detail \", e);\r\n  };\r\n\r\n  onTrashIconClick = e => {\r\n    console.log(e);\r\n\r\n    this.setState({\r\n      onConfirmModalShow: true,\r\n      detailDataUtama: e.data,\r\n      productsId: e.id\r\n    });\r\n  };\r\n\r\n  onCloseClick = () => {\r\n    this.setState({\r\n      onModalShow: false,\r\n      onConfirmModalShow: false\r\n    });\r\n  };\r\n\r\n  logOut = () => {\r\n    console.log(\"TEST\");\r\n    this.props.logout();\r\n    const { history } = this.props;\r\n\r\n    history.push(\"/auth/admin/login\");\r\n  };\r\n\r\n  dashboardURL = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/auth/admin/dashboard\");\r\n  };\r\n\r\n  categoryURL = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/auth/admin/category\");\r\n  };\r\n\r\n  render() {\r\n    const { title, content, createdDate, image, imageUrl } = this.state;\r\n    const { notes, moreImage } = this.props;\r\n    // console.log(\"Hasil notes \", notes.length);\r\n    console.log(\"Detail product image \", this.props.notes);\r\n    // console.log(\"this.state.isLoading \", this.state.isLoading);\r\n    return (\r\n      <div className=\"container\">\r\n        <ImageModal\r\n          onModalShow={this.state.onModalShow}\r\n          onCloseClick={() => this.onCloseClick()}\r\n          productsId={this.state.productsId}\r\n          productsDetail={this.state.productsDetail}\r\n          detailDataUtama={this.state.detailDataUtama}\r\n        />\r\n\r\n        <ConfirmDeleteModal\r\n          onConfirmModalShow={this.state.onConfirmModalShow}\r\n          onCloseClick={() => this.onCloseClick()}\r\n          productsId={this.state.productsId}\r\n          detailDataUtama={this.state.detailDataUtama}\r\n          totalImage={this.props.moreImage.length}\r\n        />\r\n\r\n        <NavbarAdmin userEmail={this.state.email} onLogOutClick={this.logOut} />\r\n\r\n        <form\r\n          className=\"ui form\"\r\n          style={{ width: \"40%\", marginTop: \"15px\", fontSize: \"14px\" }}\r\n        >\r\n          <div className=\"field\">\r\n            <label>Product Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"first-name\"\r\n              onChange={e => this.onInputChange(e, \"title\")}\r\n              required=\"true\"\r\n            />\r\n          </div>\r\n          <div class=\"field\">\r\n            <label>Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"last-name\"\r\n              onChange={e => this.onInputChange(e, \"content\")}\r\n              required=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"field\" style={{ width: \"50%\" }}>\r\n            <label>Category</label>\r\n            {notes.length !== 0 ? (\r\n              <Fragment>\r\n                {notes.map(bebas => {\r\n                  return (\r\n                    <select\r\n                      style={{ borderColor: \"pink\" }}\r\n                      required=\"true\"\r\n                      onChange={e => this.onInputChange(e, \"category\")}\r\n                    >\r\n                      <option value=\"Arbor\">{notes.id}</option>\r\n                    </select>\r\n                  );\r\n                })}\r\n              </Fragment>\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n          </div>\r\n          <div class=\"field\">\r\n            <input type=\"file\" onChange={this.handleImageChange} />\r\n          </div>\r\n          <br />\r\n          <button\r\n            className={this.state.loadingGif}\r\n            type=\"submit\"\r\n            style={{ fontSize: \"14px\" }}\r\n            onClick={this.handleSaveNote}\r\n            disabled={this.state.isLoading}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        {notes.length !== 0 ? (\r\n          <Fragment>\r\n            {notes.map(bebas => {\r\n              return (\r\n                <div\r\n                  className=\"gridContainer\"\r\n                  key={bebas.id}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    width: \"25%\",\r\n                    \"text-align\": \"-webkit-center\"\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <p\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        width: \"-webkit-max-content\" /* Chrome */\r\n                      }}\r\n                      onClick={() => {\r\n                        this.getDetail(bebas);\r\n                      }}\r\n                    >\r\n                      {bebas.id}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n\r\n        <hr />\r\n\r\n        <div style={{ left: \"0\" }}>\r\n          {moreImage.length > 0 ? (\r\n            <Fragment>\r\n              {moreImage.map(bebas => {\r\n                return (\r\n                  <div\r\n                    class=\"img-wrap\"\r\n                    style={{\r\n                      // height: \"195px\",\r\n                      width: \"30%\",\r\n                      left: \"0\",\r\n                      marginLeft: \"1.6%\",\r\n                      marginRight: \"1.6%\"\r\n                      // marginTop: \"5%\"\r\n                    }}\r\n                  >\r\n                    <Card style={{ width: \"100%\" }}>\r\n                      <Image\r\n                        src={bebas.data.imageUrl}\r\n                        style={{ padding: \"5px\", height: \"195px\" }}\r\n                      />\r\n                      <Card.Content extra>\r\n                        <Card.Description>{bebas.data.title}</Card.Description>\r\n                      </Card.Content>\r\n                    </Card>\r\n                    <span className=\"close\">\r\n                      <Icon\r\n                        onClick={() => {\r\n                          this.onTrashIconClick(bebas);\r\n                        }}\r\n                        name=\"trash alternate outline\"\r\n                      ></Icon>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <p>Please click the category to load the result..</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  userData: state.user,\r\n  notes: state.notes,\r\n  moreImage: state.moreImage\r\n  // Dari actionnya yang berhubung ke reducer\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  saveNotes: data => dispatch(addDataToAPI(data)),\r\n  getNotes: data => dispatch(getDataFromAPI(data)),\r\n  logout: data => dispatch(logOutUser()),\r\n  showDetailProductImages: data => dispatch(getDetailProductImages(data))\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}