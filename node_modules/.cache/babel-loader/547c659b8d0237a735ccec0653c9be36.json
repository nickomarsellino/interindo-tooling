{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\test1 updates\\\\asdf\\\\src\\\\container\\\\pages\\\\AdminPages\\\\Modal\\\\index.js\";\nimport React, { Component, Fragment } from \"react\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Button, Modal } from \"react-bootstrap\";\nimport { storage } from \"../../../../config/firebase\";\nimport { connect } from \"react-redux\";\nimport './Modal.scss';\nimport { addProductsDetail, getDetailProductImages } from \"../../../../config/redux/action\";\n\nclass ImageModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showImageList = () => {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const detailData = {\n        createdDate: this.state.createdDate,\n        productsId: this.props.productsId,\n        imageUrl: this.state.imageUrl,\n        userId: userData.uid\n      };\n      this.props.showDetailProductImages(detailData);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isTrueOrFalse: false\n      });\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        })); // this.setState({ image: [...this.state.image, ...e.target.image] })\n      }\n\n      console.log(this.state.image);\n    };\n\n    this.saveDetailProducts = () => {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData); // Handle Multiple Image to Firebase\n      // https://stackoverflow.com/questions/50785465/how-to-multiple-image-upload-with-react-js-to-firebase\n\n      const image = this.state.image;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {// progress function ....\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(imageUrl => {\n          console.log(imageUrl);\n          this.setState({\n            imageUrl\n          });\n          const detailData = {\n            createdDate: this.state.createdDate,\n            userId: userData.uid,\n            productsId: this.props.productsId,\n            imageUrl: this.state.imageUrl\n          };\n          this.props.saveProductsDetail(detailData);\n        });\n      });\n    };\n\n    this.state = {\n      isTrueOrFalse: this.props.onModalShow,\n      imageUrl: [],\n      createdDate: new Date().getTime()\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onModalShow = _this$props.onModalShow,\n          onCloseClick = _this$props.onCloseClick,\n          productsId = _this$props.productsId,\n          productsDetail = _this$props.productsDetail,\n          moreImage = _this$props.moreImage;\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: onModalShow,\n      onHide: onCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Insert More for\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        left: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, moreImage.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, moreImage.map(bebas => {\n      return React.createElement(\"img\", {\n        key: bebas.id,\n        style: {\n          display: \"flex; display: -webkit-flex\",\n          margin: \"1.5%\"\n        },\n        src: bebas.data.imageUrl,\n        alt: \"\",\n        height: \"90px\",\n        width: \"30%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    })) : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"info\",\n      onClick: () => {\n        this.showImageList();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Show Image\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        onCloseClick();\n        this.saveDetailProducts();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Save Changes\"))));\n  }\n\n}\n\nconst reduxState = state => ({\n  detailProducts: state.detailProducts,\n  moreImage: state.moreImage\n});\n\nconst reduxDispatch = dispatch => ({\n  saveProductsDetail: data => dispatch(addProductsDetail(data)),\n  showDetailProductImages: data => dispatch(getDetailProductImages(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(ImageModal);","map":{"version":3,"sources":["C:/File Ch/test1 updates/asdf/src/container/pages/AdminPages/Modal/index.js"],"names":["React","Component","Fragment","Button","Modal","storage","connect","addProductsDetail","getDetailProductImages","ImageModal","constructor","props","showImageList","userData","JSON","parse","localStorage","getItem","detailData","createdDate","state","productsId","imageUrl","userId","uid","showDetailProductImages","handleClose","setState","isTrueOrFalse","onInputChange","e","type","target","value","handleImageChange","files","image","console","log","saveDetailProducts","uploadTask","ref","name","put","on","snapshot","error","child","getDownloadURL","then","saveProductsDetail","onModalShow","Date","getTime","render","onCloseClick","productsDetail","moreImage","left","length","map","bebas","id","display","margin","data","reduxState","detailProducts","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { storage } from \"../../../../config/firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './Modal.scss';\r\n\r\nimport {\r\n  addProductsDetail,\r\n  getDetailProductImages\r\n} from \"../../../../config/redux/action\";\r\n\r\nclass ImageModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isTrueOrFalse: this.props.onModalShow,\r\n      imageUrl: [],\r\n      createdDate: new Date().getTime()\r\n    };\r\n  }\r\n\r\n  showImageList = () => {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    const detailData = {\r\n      createdDate: this.state.createdDate,\r\n      productsId: this.props.productsId,\r\n      imageUrl: this.state.imageUrl,\r\n      userId: userData.uid\r\n    };\r\n\r\n    this.props.showDetailProductImages(detailData);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ isTrueOrFalse: false });\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n      // this.setState({ image: [...this.state.image, ...e.target.image] })\r\n    }\r\n    console.log(this.state.image);\r\n  };\r\n\r\n  saveDetailProducts = () => {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n    // Handle Multiple Image to Firebase\r\n    // https://stackoverflow.com/questions/50785465/how-to-multiple-image-upload-with-react-js-to-firebase\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ....\r\n      },\r\n      error => {\r\n        // error function ....\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ....\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(imageUrl => {\r\n            console.log(imageUrl);\r\n            this.setState({ imageUrl });\r\n\r\n            const detailData = {\r\n              createdDate: this.state.createdDate,\r\n              userId: userData.uid,\r\n              productsId: this.props.productsId,\r\n              imageUrl: this.state.imageUrl\r\n            };\r\n\r\n            this.props.saveProductsDetail(detailData);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onModalShow,\r\n      onCloseClick,\r\n      productsId,\r\n      productsDetail,\r\n      moreImage\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <Modal show={onModalShow} onHide={onCloseClick}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Insert More for</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form style={{ left: 0 }}>\r\n              {moreImage.length > 0 ? (\r\n                <Fragment>\r\n                  {moreImage.map(bebas => {\r\n                    return (\r\n                        <img\r\n                          key={bebas.id}\r\n                          style={{ display: \"flex; display: -webkit-flex\", margin: \"1.5%\" }}\r\n                          src={bebas.data.imageUrl}\r\n                          alt=\"\"\r\n                          height=\"90px\"\r\n                          width=\"30%\"\r\n                        ></img>\r\n                    );\r\n                  })}\r\n                </Fragment>\r\n              ) : null}\r\n              <br />\r\n              <div>\r\n                <input type=\"file\" onChange={this.handleImageChange} multiple />\r\n              </div>\r\n            </form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={() => {\r\n                this.showImageList();\r\n              }}\r\n            >\r\n              Show Image\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                onCloseClick();\r\n                this.saveDetailProducts();\r\n              }}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  detailProducts: state.detailProducts,\r\n  moreImage: state.moreImage\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  saveProductsDetail: data => dispatch(addProductsDetail(data)),\r\n  showDetailProductImages: data => dispatch(getDetailProductImages(data))\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(ImageModal);\r\n"]},"metadata":{},"sourceType":"module"}