{"ast":null,"code":"import firebase, { database } from \"../../firebase\";\nexport const actionUserName = () => dispatch => {\n  setTimeout(() => {\n    return dispatch({\n      type: \"CHANGE_USER\",\n      value: \"Raissa\"\n    });\n  }, 1500);\n};\nexport const loginUserAPI = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: \"CHANGE_LOADING\",\n      value: true\n    });\n    firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n      console.log(\"Response \", res);\n      const userData = {\n        email: res.user.email,\n        uid: res.user.uid,\n        emailVerified: res.user.emailVerified,\n        refreshToken: res.user.refreshToken\n      }; // Set isLoading jadi false lagi setelah selesai\n\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        value: false\n      });\n      dispatch({\n        type: \"CHANGE_ISLOGIN\",\n        value: true\n      });\n      dispatch({\n        type: \"CHANGE_USER\",\n        value: userData\n      });\n      resolve(userData);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        value: false\n      });\n      dispatch({\n        type: \"CHANGE_ISLOGIN\",\n        value: false\n      });\n      dispatch({\n        type: \"SHOW_ERRORMESSAGE\",\n        value: errorMessage\n      });\n      reject(false);\n    });\n  });\n};\nexport const logOutUser = data => dispatch => {\n  firebase.auth().signOut().then(function () {\n    //Sign-out successful.\n    localStorage.clear();\n    console.log(\"Sukses Sign Out !\");\n  }).catch(function (error) {// An error happened.\n  });\n}; // Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\n\nexport const addDataToAPI = data => dispatch => {\n  database.ref(\"Products/\").push({\n    DataUtama: {\n      // Entr bikin validasi untuk nama title cuma boleh 1 doang, unique\n      title: data.title,\n      content: data.content,\n      imageUrl: data.imageUrl,\n      createdDate: data.createdDate,\n      createdBy: data.userId\n    }\n  });\n  console.log(\"result action \", data);\n}; // Get data api using redux\n\nexport const getDataFromAPI = userId => dispatch => {\n  var urlNotes = firebase.database().ref(\"Products/\");\n  return new Promise((resolve, reject) => {\n    urlNotes.on(\"value\", function (snapshot) {\n      // ubah object jadi Array\n      const data = [];\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\n        data.push({\n          id: key,\n          data: snapshot.val()[key]\n        });\n      });\n      console.log(\"DATA BUAT CEK GET API \", data);\n      dispatch({\n        type: \"SET_NOTES\",\n        value: data\n      });\n      resolve(snapshot.val());\n    });\n  });\n};\nexport const addProductsDetail = data => dispatch => {\n  database.ref(\"Products/\" + data.productsId).push({\n    imageUrl: data.imageUrl\n  });\n  console.log(\"result action \", data);\n}; // Get data api using redux\n\nexport const getDetailProductImages = data => dispatch => {\n  console.log(data);\n  var urlNotes = firebase.database().ref(\"Products/\" + data.productsId);\n  return new Promise((resolve, reject) => {\n    urlNotes.on(\"value\", function (snapshot) {\n      // ubah object jadi Array\n      const data = [];\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\n        data.push({\n          id: key,\n          data: snapshot.val()[key]\n        });\n      });\n      console.log(\"Data untuk di Modal \", data);\n      dispatch({\n        type: \"SHOW_MORE_IMAGE\",\n        value: data\n      });\n      resolve(snapshot.val());\n    });\n  });\n};","map":{"version":3,"sources":["C:/File Ch/test1 updates/interindo-tooling/src/config/redux/action/index.js"],"names":["firebase","database","actionUserName","dispatch","setTimeout","type","value","loginUserAPI","data","Promise","resolve","reject","auth","signInWithEmailAndPassword","email","password","then","res","console","log","userData","user","uid","emailVerified","refreshToken","catch","error","errorCode","code","errorMessage","message","logOutUser","signOut","localStorage","clear","addDataToAPI","ref","push","DataUtama","title","content","imageUrl","createdDate","createdBy","userId","getDataFromAPI","urlNotes","on","snapshot","Object","keys","val","map","key","id","addProductsDetail","productsId","getDetailProductImages"],"mappings":"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","sourcesContent":["import firebase, { database } from \"../../firebase\";\r\n\r\nexport const actionUserName = () => dispatch => {\r\n  setTimeout(() => {\r\n    return dispatch({ type: \"CHANGE_USER\", value: \"Raissa\" });\r\n  }, 1500);\r\n};\r\n\r\nexport const loginUserAPI = data => dispatch => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch({ type: \"CHANGE_LOADING\", value: true });\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(data.email, data.password)\r\n      .then(res => {\r\n        console.log(\"Response \", res);\r\n        const userData = {\r\n          email: res.user.email,\r\n          uid: res.user.uid,\r\n          emailVerified: res.user.emailVerified,\r\n          refreshToken: res.user.refreshToken\r\n        };\r\n        // Set isLoading jadi false lagi setelah selesai\r\n        dispatch({ type: \"CHANGE_LOADING\", value: false });\r\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: true });\r\n        dispatch({ type: \"CHANGE_USER\", value: userData });\r\n        resolve(userData);\r\n      })\r\n      .catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode);\r\n        console.log(errorMessage);\r\n        dispatch({ type: \"CHANGE_LOADING\", value: false });\r\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: false });\r\n        dispatch({ type: \"SHOW_ERRORMESSAGE\", value: errorMessage });\r\n        reject(false);\r\n      });\r\n  });\r\n};\r\n\r\nexport const logOutUser = data => dispatch => {\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(function() {\r\n      //Sign-out successful.\r\n      localStorage.clear();\r\n      console.log(\"Sukses Sign Out !\");\r\n    })\r\n    .catch(function(error) {\r\n      // An error happened.\r\n    });\r\n};\r\n\r\n// Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\r\nexport const addDataToAPI = data => dispatch => {\r\n  database.ref(\"Products/\").push({\r\n    DataUtama: {\r\n      // Entr bikin validasi untuk nama title cuma boleh 1 doang, unique\r\n      title: data.title,\r\n      content: data.content,\r\n      imageUrl: data.imageUrl,\r\n      createdDate: data.createdDate,\r\n      createdBy: data.userId\r\n    }\r\n  });\r\n  console.log(\"result action \", data);\r\n};\r\n\r\n// Get data api using redux\r\nexport const getDataFromAPI = userId => dispatch => {\r\n  var urlNotes = firebase.database().ref(\"Products/\");\r\n  return new Promise((resolve, reject) => {\r\n    urlNotes.on(\"value\", function(snapshot) {\r\n      // ubah object jadi Array\r\n      const data = [];\r\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\r\n        data.push({\r\n          id: key,\r\n          data: snapshot.val()[key]\r\n        });\r\n      });\r\n      console.log(\"DATA BUAT CEK GET API \", data)\r\n      dispatch({ type: \"SET_NOTES\", value: data });\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport const addProductsDetail = data => dispatch => {\r\n  database.ref(\"Products/\" + data.productsId  ).push({\r\n    imageUrl: data.imageUrl\r\n  });\r\n  console.log(\"result action \", data);\r\n};\r\n\r\n// Get data api using redux\r\nexport const getDetailProductImages = data => dispatch => {\r\n  console.log(data);\r\n  var urlNotes = firebase\r\n    .database()\r\n    .ref(\"Products/\" + data.productsId);\r\n  return new Promise((resolve, reject) => {\r\n    urlNotes.on(\"value\", function(snapshot) {\r\n      // ubah object jadi Array\r\n      const data = [];\r\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\r\n        data.push({\r\n          id: key,\r\n          data: snapshot.val()[key]\r\n        });\r\n      });\r\n      console.log(\"Data untuk di Modal \", data);\r\n      dispatch({ type: \"SHOW_MORE_IMAGE\", value: data });\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}