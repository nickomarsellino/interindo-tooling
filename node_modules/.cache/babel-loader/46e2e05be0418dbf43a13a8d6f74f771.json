{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\test1 updates\\\\asdf\\\\src\\\\container\\\\pages\\\\AdminPages\\\\Dashboard\\\\index.js\";\nimport React, { Component, Fragment, useState, useEffect } from \"react\";\nimport { addDataToAPI, getDataFromAPI, logOutUser, getDetailProductImages, deleteMainProduct } from \"../../../../config/redux/action\";\nimport { connect } from \"react-redux\";\nimport { storage } from \"../../../../config/firebase\"; // import * as moment from \"moment\";\n\nimport NavbarAdmin from \"../NavbarAdmin\";\nimport ImageModal from \"../Modal\";\nimport ConfirmDeleteModal from \"../ConfirmDeleteModal\";\nimport { Card, Icon, Image, Popup, Button, GridColumn } from \"semantic-ui-react\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      // Bingung kalo ga di ganti kategorinya langsung clic should be Arbor\n      category: \"Arbor\",\n      createdDate: new Date().getTime(),\n      createdBy: \"\",\n      image: null,\n      imageUrl: \"\",\n      onModalShow: false,\n      onConfirmModalShow: false,\n      productsDetail: \"\",\n      productsId: \"\",\n      email: \"\",\n      detailDataUtama: \"\",\n      isLoading: false,\n      loadingGif: \"ui primary button\",\n      data: []\n    };\n\n    this.handleSaveNote = e => {\n      e.preventDefault(); // GET LOCAL STORAGE\n\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData);\n      const image = this.state.image;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function .... Disabled the button\n        this.setState({\n          isLoading: true,\n          loadingGif: \"ui primary loading button\"\n        });\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(imageUrl => {\n          console.log(imageUrl);\n          this.setState({\n            imageUrl\n          });\n          const data = {\n            title: this.state.title,\n            content: this.state.content,\n            category: this.state.category,\n            createdDate: this.state.createdDate,\n            userId: userData.uid,\n            imageUrl: this.state.imageUrl\n          };\n          console.log(\"Data \", data);\n          this.props.saveNotes(data); // Enabled again the Button\n\n          this.setState({\n            image: \"\",\n            isLoading: false,\n            loadingGif: \"ui primary button\" // clear form\n\n          });\n        });\n      });\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n\n      console.log(this.state.image);\n    };\n\n    this.getDetail = e => {\n      const notes = this.props.notes;\n      const data = {\n        category: e.id\n      };\n      console.log(\"this.props.notes \", e);\n      console.log(\"NOTES, \", notes);\n      this.props.deleteOneProduct(\"-M1UrAGNg0NkVqIlBH5U\");\n      this.props.showDetailProductImages(data);\n    };\n\n    this.onTrashIconClick = e => {\n      console.log(e);\n      this.setState({\n        onConfirmModalShow: true,\n        detailDataUtama: e.data,\n        productsId: e.id\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        onModalShow: false,\n        onConfirmModalShow: false\n      });\n    };\n\n    this.logOut = () => {\n      console.log(\"TEST\");\n      this.props.logout();\n      const history = this.props.history;\n      history.push(\"/auth/admin/login\");\n    };\n  }\n\n  // const [posts, setPosts] = useState([]);\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (userData) {\n      this.setState({\n        email: userData.email\n      });\n      this.props.getNotes(userData.uid);\n    } else {\n      this.props.history.push(\"/auth/admin/login\");\n    }\n\n    var storageRef = storage.ref(); // // ******IGNORE******//\n    // fetch(\"http://localhost:57698/api/student/getstudentdata\").then(\n    //   async response => {\n    //     const data = await response.json();\n    //     console.log(\"Data API CH \", data);\n    //   }\n    // );\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          createdDate = _this$state.createdDate,\n          image = _this$state.image,\n          imageUrl = _this$state.imageUrl;\n    const _this$props = this.props,\n          notes = _this$props.notes,\n          moreImage = _this$props.moreImage; // console.log(\"Hasil notes \", notes.length);\n    // console.log(\"Detail product image \", moreImage);\n    // console.log(\"this.state.isLoading \", this.state.isLoading);\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(ImageModal, {\n      onModalShow: this.state.onModalShow,\n      onCloseClick: () => this.onCloseClick(),\n      productsId: this.state.productsId,\n      productsDetail: this.state.productsDetail,\n      detailDataUtama: this.state.detailDataUtama,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(ConfirmDeleteModal, {\n      onConfirmModalShow: this.state.onConfirmModalShow,\n      onCloseClick: () => this.onCloseClick(),\n      productsId: this.state.productsId,\n      detailDataUtama: this.state.detailDataUtama,\n      totalImage: this.props.moreImage.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(NavbarAdmin, {\n      userEmail: this.state.email,\n      onLogOutClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"ui form\",\n      style: {\n        width: \"40%\",\n        marginTop: \"15px\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"first-name\",\n      onChange: e => this.onInputChange(e, \"title\"),\n      required: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"last-name\",\n      onChange: e => this.onInputChange(e, \"content\"),\n      required: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      style: {\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Category\"), notes.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      style: {\n        borderColor: \"pink\"\n      },\n      required: \"true\",\n      onChange: e => this.onInputChange(e, \"category\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"option\", {\n        value: bebas.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, bebas.id);\n    }))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Loading.....\")), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: this.state.loadingGif,\n      type: \"submit\",\n      style: {\n        fontSize: \"14px\"\n      },\n      onClick: this.handleSaveNote,\n      disabled: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), notes.length !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        className: \"gridContainer\",\n        key: bebas.id,\n        style: {\n          display: \"inline-block\",\n          width: \"25%\",\n          \"text-align\": \"-webkit-center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          cursor: \"pointer\",\n          width: \"-webkit-max-content\"\n          /* Chrome */\n\n        },\n        onClick: () => {\n          this.getDetail(bebas);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, bebas.id)));\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Loading...\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        left: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, moreImage.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, moreImage.map(bebas => {\n      console.log(\"moreImage \", moreImage);\n\n      if (moreImage.data.imageUrl === \"null\") {\n        return React.createElement(\"div\", {\n          class: \"img-wrap\",\n          style: {\n            width: \"30%\",\n            left: \"0\",\n            marginLeft: \"1.6%\",\n            marginRight: \"1.6%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, React.createElement(Card, {\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: bebas.data.imageUrl,\n          style: {\n            padding: \"5px\",\n            height: \"195px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }), React.createElement(Card.Content, {\n          extra: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, bebas.data.title))), React.createElement(\"span\", {\n          className: \"close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          onClick: () => {\n            this.onTrashIconClick(bebas);\n          },\n          name: \"trash alternate outline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        })));\n      }\n    })) : React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Please click the category to load the result..\"))));\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes,\n  moreImage: state.moreImage,\n  deleteProduct: state.deleteProduct // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data)),\n  logout: data => dispatch(logOutUser()),\n  showDetailProductImages: data => dispatch(getDetailProductImages(data)),\n  deleteOneProduct: data => dispatch(deleteMainProduct(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["C:/File Ch/test1 updates/asdf/src/container/pages/AdminPages/Dashboard/index.js"],"names":["React","Component","Fragment","useState","useEffect","addDataToAPI","getDataFromAPI","logOutUser","getDetailProductImages","deleteMainProduct","connect","storage","NavbarAdmin","ImageModal","ConfirmDeleteModal","Card","Icon","Image","Popup","Button","GridColumn","Dashboard","state","title","content","category","createdDate","Date","getTime","createdBy","image","imageUrl","onModalShow","onConfirmModalShow","productsDetail","productsId","email","detailDataUtama","isLoading","loadingGif","data","handleSaveNote","e","preventDefault","userData","JSON","parse","localStorage","getItem","console","log","uploadTask","ref","name","put","on","snapshot","setState","error","child","getDownloadURL","then","userId","uid","props","saveNotes","onInputChange","type","target","value","handleImageChange","files","getDetail","notes","id","deleteOneProduct","showDetailProductImages","onTrashIconClick","onCloseClick","logOut","logout","history","push","componentDidMount","getNotes","storageRef","render","moreImage","length","width","marginTop","fontSize","borderColor","map","bebas","display","cursor","left","marginLeft","marginRight","padding","height","textAlign","reduxState","user","deleteProduct","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  addDataToAPI,\r\n  getDataFromAPI,\r\n  logOutUser,\r\n  getDetailProductImages,\r\n  deleteMainProduct\r\n} from \"../../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { storage } from \"../../../../config/firebase\";\r\n// import * as moment from \"moment\";\r\nimport NavbarAdmin from \"../NavbarAdmin\";\r\nimport ImageModal from \"../Modal\";\r\nimport ConfirmDeleteModal from \"../ConfirmDeleteModal\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Popup,\r\n  Button,\r\n  GridColumn\r\n} from \"semantic-ui-react\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    // Bingung kalo ga di ganti kategorinya langsung clic should be Arbor\r\n    category: \"Arbor\",\r\n    createdDate: new Date().getTime(),\r\n    createdBy: \"\",\r\n    image: null,\r\n    imageUrl: \"\",\r\n    onModalShow: false,\r\n    onConfirmModalShow: false,\r\n    productsDetail: \"\",\r\n    productsId: \"\",\r\n    email: \"\",\r\n    detailDataUtama: \"\",\r\n    isLoading: false,\r\n    loadingGif: \"ui primary button\",\r\n    data: []\r\n  };\r\n\r\n  // const [posts, setPosts] = useState([]);\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    if (userData) {\r\n      this.setState({\r\n        email: userData.email\r\n      });\r\n      this.props.getNotes(userData.uid);\r\n    } else {\r\n      this.props.history.push(\"/auth/admin/login\");\r\n    }\r\n\r\n    var storageRef = storage.ref();\r\n\r\n    // // ******IGNORE******//\r\n    // fetch(\"http://localhost:57698/api/student/getstudentdata\").then(\r\n    //   async response => {\r\n    //     const data = await response.json();\r\n    //     console.log(\"Data API CH \", data);\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  handleSaveNote = e => {\r\n    e.preventDefault();\r\n    // GET LOCAL STORAGE\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function .... Disabled the button\r\n        this.setState({\r\n          isLoading: true,\r\n          loadingGif: \"ui primary loading button\"\r\n        });\r\n      },\r\n      error => {\r\n        // error function ....\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ....\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(imageUrl => {\r\n            console.log(imageUrl);\r\n            this.setState({ imageUrl });\r\n\r\n            const data = {\r\n              title: this.state.title,\r\n              content: this.state.content,\r\n              category: this.state.category,\r\n              createdDate: this.state.createdDate,\r\n              userId: userData.uid,\r\n              imageUrl: this.state.imageUrl\r\n            };\r\n            console.log(\"Data \", data);\r\n\r\n            this.props.saveNotes(data);\r\n\r\n            // Enabled again the Button\r\n            this.setState({\r\n              image: \"\",\r\n              isLoading: false,\r\n              loadingGif: \"ui primary button\"\r\n              // clear form\r\n            });\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n    console.log(this.state.image);\r\n  };\r\n\r\n  getDetail = e => {\r\n    const { notes } = this.props;\r\n    const data = {\r\n      category: e.id\r\n    };\r\n    console.log(\"this.props.notes \", e);\r\n    console.log(\"NOTES, \", notes);\r\n    this.props.deleteOneProduct(\"-M1UrAGNg0NkVqIlBH5U\");\r\n    this.props.showDetailProductImages(data);\r\n  };\r\n\r\n  onTrashIconClick = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      onConfirmModalShow: true,\r\n      detailDataUtama: e.data,\r\n      productsId: e.id\r\n    });\r\n  };\r\n\r\n  onCloseClick = () => {\r\n    this.setState({\r\n      onModalShow: false,\r\n      onConfirmModalShow: false\r\n    });\r\n  };\r\n\r\n  logOut = () => {\r\n    console.log(\"TEST\");\r\n    this.props.logout();\r\n    const { history } = this.props;\r\n\r\n    history.push(\"/auth/admin/login\");\r\n  };\r\n\r\n  render() {\r\n    const { title, content, createdDate, image, imageUrl } = this.state;\r\n    const { notes, moreImage } = this.props;\r\n    // console.log(\"Hasil notes \", notes.length);\r\n    // console.log(\"Detail product image \", moreImage);\r\n    // console.log(\"this.state.isLoading \", this.state.isLoading);\r\n    return (\r\n      <div className=\"container\">\r\n        <ImageModal\r\n          onModalShow={this.state.onModalShow}\r\n          onCloseClick={() => this.onCloseClick()}\r\n          productsId={this.state.productsId}\r\n          productsDetail={this.state.productsDetail}\r\n          detailDataUtama={this.state.detailDataUtama}\r\n        />\r\n\r\n        <ConfirmDeleteModal\r\n          onConfirmModalShow={this.state.onConfirmModalShow}\r\n          onCloseClick={() => this.onCloseClick()}\r\n          productsId={this.state.productsId}\r\n          detailDataUtama={this.state.detailDataUtama}\r\n          totalImage={this.props.moreImage.length}\r\n        />\r\n\r\n        <NavbarAdmin userEmail={this.state.email} onLogOutClick={this.logOut} />\r\n\r\n        <form\r\n          className=\"ui form\"\r\n          style={{ width: \"40%\", marginTop: \"15px\", fontSize: \"14px\" }}\r\n        >\r\n          <div className=\"field\">\r\n            <label>Product Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"first-name\"\r\n              onChange={e => this.onInputChange(e, \"title\")}\r\n              required=\"true\"\r\n            />\r\n          </div>\r\n          <div class=\"field\">\r\n            <label>Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"last-name\"\r\n              onChange={e => this.onInputChange(e, \"content\")}\r\n              required=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"field\" style={{ width: \"50%\" }}>\r\n            <label>Category</label>\r\n            {notes.length !== 0 ? (\r\n              <Fragment>\r\n                <select\r\n                  style={{ borderColor: \"pink\" }}\r\n                  required=\"true\"\r\n                  onChange={e => this.onInputChange(e, \"category\")}\r\n                >\r\n                  {notes.map(bebas => {\r\n                    return <option value={bebas.id}>{bebas.id}</option>;\r\n                  })}\r\n                </select>\r\n              </Fragment>\r\n            ) : (\r\n              <p>Loading.....</p>\r\n            )}\r\n          </div>\r\n          <div class=\"field\">\r\n            <input type=\"file\" onChange={this.handleImageChange} />\r\n          </div>\r\n          <br />\r\n          <button\r\n            className={this.state.loadingGif}\r\n            type=\"submit\"\r\n            style={{ fontSize: \"14px\" }}\r\n            onClick={this.handleSaveNote}\r\n            disabled={this.state.isLoading}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        {notes.length !== 0 ? (\r\n          <Fragment>\r\n            {notes.map(bebas => {\r\n              return (\r\n                <div\r\n                  className=\"gridContainer\"\r\n                  key={bebas.id}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    width: \"25%\",\r\n                    \"text-align\": \"-webkit-center\"\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <p\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        width: \"-webkit-max-content\" /* Chrome */\r\n                      }}\r\n                      onClick={() => {\r\n                        this.getDetail(bebas);\r\n                      }}\r\n                    >\r\n                      {bebas.id}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n\r\n        <hr />\r\n\r\n        <div style={{ left: \"0\" }}>\r\n          {moreImage.length > 0 ? (\r\n            <Fragment>\r\n              {moreImage.map(bebas => {\r\n                console.log(\"moreImage \", moreImage);\r\n                if (moreImage.data.imageUrl === \"null\") {\r\n                  return (\r\n                    <div\r\n                      class=\"img-wrap\"\r\n                      style={{\r\n                        width: \"30%\",\r\n                        left: \"0\",\r\n                        marginLeft: \"1.6%\",\r\n                        marginRight: \"1.6%\"\r\n                      }}\r\n                    >\r\n                      <Card style={{ width: \"100%\" }}>\r\n                        <Image\r\n                          src={bebas.data.imageUrl}\r\n                          style={{ padding: \"5px\", height: \"195px\" }}\r\n                        />\r\n                        <Card.Content extra>\r\n                          <Card.Description>\r\n                            {bebas.data.title}\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                      <span className=\"close\">\r\n                        <Icon\r\n                          onClick={() => {\r\n                            this.onTrashIconClick(bebas);\r\n                          }}\r\n                          name=\"trash alternate outline\"\r\n                        ></Icon>\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </Fragment>\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <p>Please click the category to load the result..</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  userData: state.user,\r\n  notes: state.notes,\r\n  moreImage: state.moreImage,\r\n  deleteProduct: state.deleteProduct\r\n  // Dari actionnya yang berhubung ke reducer\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  saveNotes: data => dispatch(addDataToAPI(data)),\r\n  getNotes: data => dispatch(getDataFromAPI(data)),\r\n  logout: data => dispatch(logOutUser()),\r\n  showDetailProductImages: data => dispatch(getDetailProductImages(data)),\r\n  deleteOneProduct: data => dispatch(deleteMainProduct(data))\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}