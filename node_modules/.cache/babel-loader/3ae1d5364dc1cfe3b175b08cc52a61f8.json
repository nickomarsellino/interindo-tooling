{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\react-js-firebase-crud-invoice\\\\src\\\\containers\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { addDataToAPI, getDataFromAPI } from '../../../config/redux/action';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as moment from 'moment';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      date: '',\n      createdBy: '',\n      name: '',\n      receiptId: 0,\n      price1: 0,\n      price2: 0\n    };\n\n    this.handleSaveNote = () => {\n      // GET LOCAL STORAGE \n      const userData = JSON.parse(localStorage.getItem('userData'));\n      console.log(\"userData after parse json \", userData);\n      const data = {\n        title: this.state.title,\n        content: this.state.content,\n        date: new Date().getTime(),\n        userId: userData.uid\n      };\n      this.props.saveNotes(data);\n      console.log(\"dataafterSUBMIT \", data);\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.createAndDownloadPdf = () => {\n      console.log(\"Clicked..!\");\n      axios.post('/Invoice/create-pdf', this.state).then(() => axios.get('fetch-pdf', {\n        responseType: 'blob'\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: 'application/pdf'\n        });\n        saveAs(pdfBlob, 'newPdf.pdf');\n      });\n    };\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    console.log(\"Didmount userData \", userData); // Call getDataAPI from props\n\n    this.props.getNotes(userData.uid);\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          date = _this$state.date;\n    const notes = this.props.notes;\n    console.log(\"Hasil notes \", notes);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginLeft: \"25%\",\n        marginRight: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      value: title,\n      onChange: e => this.onInputChange(e, 'title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      class: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputPassword1\",\n      value: content,\n      onChange: e => this.onInputChange(e, 'content'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.handleSaveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), notes.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        key: bebas.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, bebas.data.title), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, bebas.data.content), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, moment(bebas.data.date).format('LLLL')))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    })) : null);\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["C:/File Ch/react-js-firebase-crud-invoice/src/containers/pages/Dashboard/index.js"],"names":["React","Component","Fragment","addDataToAPI","getDataFromAPI","connect","Card","Button","axios","saveAs","moment","Dashboard","state","title","content","date","createdBy","name","receiptId","price1","price2","handleSaveNote","userData","JSON","parse","localStorage","getItem","console","log","data","Date","getTime","userId","uid","props","saveNotes","onInputChange","e","type","setState","target","value","createAndDownloadPdf","post","then","get","responseType","res","pdfBlob","Blob","componentDidMount","getNotes","render","notes","marginLeft","marginRight","length","map","bebas","id","format","reduxState","user","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { addDataToAPI, getDataFromAPI } from '../../../config/redux/action';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as moment from 'moment';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        date: '',\r\n        createdBy: '',\r\n        name: '',\r\n        receiptId: 0,\r\n        price1: 0,\r\n        price2: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        console.log(\"Didmount userData \", userData)\r\n        // Call getDataAPI from props\r\n        this.props.getNotes(userData.uid)\r\n    }\r\n\r\n    handleSaveNote = () => {\r\n        // GET LOCAL STORAGE \r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        console.log(\"userData after parse json \", userData);\r\n\r\n        const data = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            date: new Date().getTime(),\r\n            userId: userData.uid\r\n        }\r\n        this.props.saveNotes(data);\r\n        console.log(\"dataafterSUBMIT \", data)\r\n    }\r\n\r\n    onInputChange = (e, type) => {\r\n        this.setState({\r\n            [type]: e.target.value\r\n        })\r\n    }\r\n\r\n    createAndDownloadPdf = () => {\r\n        console.log(\"Clicked..!\")\r\n        axios.post('/Invoice/create-pdf', this.state)\r\n            .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\r\n            .then((res) => {\r\n                const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n\r\n                saveAs(pdfBlob, 'newPdf.pdf');\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { title, content, date } = this.state;\r\n        const { notes } = this.props;\r\n        console.log(\"Hasil notes \", notes)\r\n        return (\r\n            <div className=\"container\">\r\n                <form style={{ marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Title</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={title} onChange={(e) => this.onInputChange(e, 'title')} />\r\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Content</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" value={content} onChange={(e) => this.onInputChange(e, 'content')} />\r\n                    </div>\r\n                    <button class=\"btn btn-primary\" onClick={this.handleSaveNote}>Submit</button>\r\n                </form>\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                {\r\n                    notes.length > 0 ? (\r\n                        <Fragment>\r\n                            {\r\n                                notes.map(bebas => {\r\n                                    return (\r\n                                        <div key={bebas.id}>\r\n                                            <Card >\r\n                                                <Card.Header as=\"h5\">{bebas.data.title}</Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Card.Title>{bebas.data.content}</Card.Title>\r\n                                                    <Card.Text>{moment(bebas.data.date).format('LLLL')}</Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            <br />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Fragment>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    userData: state.user,\r\n    notes: state.notes\r\n    // Dari actionnya yang berhubung ke reducer\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    saveNotes: (data) => dispatch(addDataToAPI(data)),\r\n    getNotes: (data) => dispatch(getDataFromAPI(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);"]},"metadata":{},"sourceType":"module"}