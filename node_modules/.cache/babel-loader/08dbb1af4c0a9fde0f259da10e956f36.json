{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\n\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n    var now = +new Date(),\n        args = arguments;\n\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","map":{"version":3,"sources":["C:/File Ch/test1 updates/asdf/node_modules/react-lazyload/lib/utils/throttle.js"],"names":["Object","defineProperty","exports","value","default","throttle","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;AACA;;AACA,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,UAAtB,EAAkCC,KAAlC,EAAyC;AACvCD,EAAAA,UAAU,KAAKA,UAAU,GAAG,GAAlB,CAAV;AACA,MAAIE,IAAJ,EAAUC,UAAV;AACA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAGH,KAAK,IAAI,IAAvB;AAEA,QAAII,GAAG,GAAG,CAAC,IAAIC,IAAJ,EAAX;AAAA,QACIC,IAAI,GAAGC,SADX;;AAEA,QAAIN,IAAI,IAAIG,GAAG,GAAGH,IAAI,GAAGF,UAAzB,EAAqC;AACnC;AACAS,MAAAA,YAAY,CAACN,UAAD,CAAZ;AACAA,MAAAA,UAAU,GAAGO,UAAU,CAAC,YAAY;AAClCR,QAAAA,IAAI,GAAGG,GAAP;AACAN,QAAAA,EAAE,CAACY,KAAH,CAASP,OAAT,EAAkBG,IAAlB;AACD,OAHsB,EAGpBP,UAHoB,CAAvB;AAID,KAPD,MAOO;AACLE,MAAAA,IAAI,GAAGG,GAAP;AACAN,MAAAA,EAAE,CAACY,KAAH,CAASP,OAAT,EAAkBG,IAAlB;AACD;AACF,GAhBD;AAiBD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = throttle;\r\n/*eslint-disable */\r\nfunction throttle(fn, threshhold, scope) {\r\n  threshhold || (threshhold = 250);\r\n  var last, deferTimer;\r\n  return function () {\r\n    var context = scope || this;\r\n\r\n    var now = +new Date(),\r\n        args = arguments;\r\n    if (last && now < last + threshhold) {\r\n      // hold on to it\r\n      clearTimeout(deferTimer);\r\n      deferTimer = setTimeout(function () {\r\n        last = now;\r\n        fn.apply(context, args);\r\n      }, threshhold);\r\n    } else {\r\n      last = now;\r\n      fn.apply(context, args);\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"script"}