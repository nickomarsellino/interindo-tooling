{"ast":null,"code":"import firebase, { database } from \"../../firebase\";\nexport const actionUserName = () => dispatch => {\n  setTimeout(() => {\n    return dispatch({\n      type: \"CHANGE_USER\",\n      value: \"Raissa\"\n    });\n  }, 1500);\n};\nexport const loginUserAPI = data => dispatch => {\n  console.log(data);\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: \"CHANGE_LOADING\",\n      value: true\n    });\n    firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n      console.log(\"Response \", res);\n      const userData = {\n        email: res.user.email,\n        uid: res.user.uid,\n        emailVerified: res.user.emailVerified,\n        refreshToken: res.user.refreshToken\n      }; // Set isLoading jadi false lagi setelah selesai\n\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        value: false\n      });\n      dispatch({\n        type: \"CHANGE_ISLOGIN\",\n        value: true\n      });\n      dispatch({\n        type: \"CHANGE_USER\",\n        value: userData\n      });\n      resolve(userData);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        value: false\n      });\n      dispatch({\n        type: \"CHANGE_ISLOGIN\",\n        value: false\n      });\n      dispatch({\n        type: \"SHOW_ERRORMESSAGE\",\n        value: errorMessage\n      });\n      reject(false);\n    });\n  });\n};\nexport const logOutUser = data => dispatch => {\n  firebase.auth().signOut().then(function () {\n    //Sign-out successful.\n    localStorage.clear();\n    console.log(\"Sukses Sign Out !\");\n  }).catch(function (error) {// An error happened.\n  });\n}; // Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\n\nexport const addDataToAPI = data => dispatch => {\n  database.ref(\"Products/\" + data.category).push({\n    //     // Entr bikin validasi untuk nama title cuma boleh 1 doang, unique\n    title: data.title,\n    content: data.content,\n    category: data.category,\n    imageUrl: data.imageUrl,\n    createdDate: data.createdDate,\n    createdBy: data.userId\n  });\n  console.log(\"result action \", data);\n}; // Get data api using redux\n\nexport const getDataFromAPI = userId => dispatch => {\n  // var urlNotes = firebase.database().ref(\"Products/CuttingTool\");\n  var urlNotes = firebase.database().ref(\"Products/\");\n  return new Promise((resolve, reject) => {\n    urlNotes.on(\"value\", function (snapshot) {\n      // ubah object jadi Array\n      const data = [];\n\n      if (snapshot.val()) {\n        Object.keys(snapshot.val() && snapshot.val()).map(key => {\n          data.push({\n            id: key,\n            data: snapshot.val()[key]\n          });\n        });\n      }\n\n      console.log(\"DATA BUAT CEK GET API \", data);\n      dispatch({\n        type: \"SET_NOTES\",\n        value: data\n      });\n      resolve(snapshot.val());\n    });\n  });\n};\nexport const addProductsDetail = data => dispatch => {\n  database.ref(\"Products/\" + data.productsId).push({\n    imageUrl: data.imageUrl\n  });\n  console.log(\"result action \", data);\n}; // Get data api using redux\n\nexport const getDetailProductImages = data => dispatch => {\n  console.log(data);\n  var urlNotes = firebase.database().ref(\"Products/\" + data.category); // return new Promise((resolve, reject) => {\n\n  urlNotes.on(\"value\", function (snapshot) {\n    // ubah object jadi Array\n    const data = [];\n\n    if (snapshot.val()) {\n      Object.keys(snapshot.val() && snapshot.val()).map(key => {\n        data.push({\n          id: key,\n          data: snapshot.val()[key]\n        });\n      });\n    }\n\n    console.log(\"Data untuk di Modal \", data);\n    dispatch({\n      type: \"SHOW_MORE_IMAGE\",\n      value: data\n    }); // resolve(snapshot.val());\n    // });\n  });\n};\nexport const deleteMainProduct = data => dispatch => {\n  console.log(\"Deleted product data\", data); // Cannot delete the image when there is only one image left\n\n  if (data.totalImage == '1') {\n    alert(\"You must at least have 1 image for each category!\");\n  } else {\n    database.ref(\"Products/\" + data.category + \"/\" + data.productId).remove();\n  }\n};\nexport const deleteImageProduct = data => dispatch => {\n  console.log(\"Deleted image ID\", data); // if(data.productImageId === \"DataUtama\") {\n  //   alert(\"Cannot delete your main Image Product, this may cause error!\")\n  // } \n  // else {\n  // database.ref(\"Products/\" + data.productId + \"/\" + data.productImageId ).remove()    \n  // }\n};","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/config/redux/action/index.js"],"names":["firebase","database","actionUserName","dispatch","setTimeout","type","value","loginUserAPI","data","console","log","Promise","resolve","reject","auth","signInWithEmailAndPassword","email","password","then","res","userData","user","uid","emailVerified","refreshToken","catch","error","errorCode","code","errorMessage","message","logOutUser","signOut","localStorage","clear","addDataToAPI","ref","category","push","title","content","imageUrl","createdDate","createdBy","userId","getDataFromAPI","urlNotes","on","snapshot","val","Object","keys","map","key","id","addProductsDetail","productsId","getDetailProductImages","deleteMainProduct","totalImage","alert","productId","remove","deleteImageProduct"],"mappings":"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","sourcesContent":["import firebase, { database } from \"../../firebase\";\n\nexport const actionUserName = () => dispatch => {\n  setTimeout(() => {\n    return dispatch({ type: \"CHANGE_USER\", value: \"Raissa\" });\n  }, 1500);\n};\n\nexport const loginUserAPI = data => dispatch => {\n  console.log(data)\n  return new Promise((resolve, reject) => {\n    dispatch({ type: \"CHANGE_LOADING\", value: true });\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(data.email, data.password)\n      .then(res => {\n        console.log(\"Response \", res);\n        const userData = {\n          email: res.user.email,\n          uid: res.user.uid,\n          emailVerified: res.user.emailVerified,\n          refreshToken: res.user.refreshToken\n        };\n        // Set isLoading jadi false lagi setelah selesai\n        dispatch({ type: \"CHANGE_LOADING\", value: false });\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: true });\n        dispatch({ type: \"CHANGE_USER\", value: userData });\n        resolve(userData);\n      })\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n        dispatch({ type: \"CHANGE_LOADING\", value: false });\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: false });\n        dispatch({ type: \"SHOW_ERRORMESSAGE\", value: errorMessage });\n        reject(false);\n      });\n  });\n};\n\nexport const logOutUser = data => dispatch => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function() {\n      //Sign-out successful.\n      localStorage.clear();\n      console.log(\"Sukses Sign Out !\");\n    })\n    .catch(function(error) {\n      // An error happened.\n    });\n};\n\n// Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\nexport const addDataToAPI = data => dispatch => {\n  database.ref(\"Products/\" + data.category).push({\n  //     // Entr bikin validasi untuk nama title cuma boleh 1 doang, unique\n      title: data.title,\n      content: data.content,\n      category: data.category,\n      imageUrl: data.imageUrl,\n      createdDate: data.createdDate,\n      createdBy: data.userId\n  });\n  console.log(\"result action \", data);\n};\n\n// Get data api using redux\nexport const getDataFromAPI = userId => dispatch => {\n  // var urlNotes = firebase.database().ref(\"Products/CuttingTool\");\n  var urlNotes = firebase.database().ref(\"Products/\");\n  return new Promise((resolve, reject) => {\n    urlNotes.on(\"value\", function(snapshot) {\n      // ubah object jadi Array\n      const data = [];\n      if(snapshot.val()){\n        Object.keys(snapshot.val() && snapshot.val()).map(key => {\n          data.push({\n            id: key,\n            data: snapshot.val()[key]\n          });\n        });\n      }\n      console.log(\"DATA BUAT CEK GET API \", data)\n      dispatch({ type: \"SET_NOTES\", value: data });\n      resolve(snapshot.val());\n    });\n  });\n};\n\nexport const addProductsDetail = data => dispatch => {\n  database.ref(\"Products/\" + data.productsId  ).push({\n    imageUrl: data.imageUrl\n  });\n  console.log(\"result action \", data);\n};\n\n// Get data api using redux\nexport const getDetailProductImages = data => dispatch => {\n  console.log(data);\n  var urlNotes = firebase.database().ref(\"Products/\" + data.category);\n  // return new Promise((resolve, reject) => {\n    urlNotes.on(\"value\", function(snapshot) {\n      // ubah object jadi Array\n      const data = [];\n      if(snapshot.val()) {\n        Object.keys(snapshot.val()&&snapshot.val()).map(key => {\n          data.push({\n            id: key,\n            data: snapshot.val()[key]\n          });\n        });\n      }\n      console.log(\"Data untuk di Modal \", data);\n      dispatch({ type: \"SHOW_MORE_IMAGE\", value: data });\n      // resolve(snapshot.val());\n    // });\n  });\n};\n\nexport const deleteMainProduct = data => dispatch => {\n  console.log(\"Deleted product data\" ,data);\n  // Cannot delete the image when there is only one image left\n  if(data.totalImage == '1'){\n    alert(\"You must at least have 1 image for each category!\")\n  }\n  else {\n    database.ref(\"Products/\" + data.category + \"/\" + data.productId ).remove()\n  }\n};\n\nexport const deleteImageProduct = data => dispatch => {\n  console.log(\"Deleted image ID\" , data);\n  // if(data.productImageId === \"DataUtama\") {\n  //   alert(\"Cannot delete your main Image Product, this may cause error!\")\n  // } \n  // else {\n    // database.ref(\"Products/\" + data.productId + \"/\" + data.productImageId ).remove()    \n  // }\n};"]},"metadata":{},"sourceType":"module"}