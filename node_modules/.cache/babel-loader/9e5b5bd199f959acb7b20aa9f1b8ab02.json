{"ast":null,"code":"var _jsxFileName = \"/Users/aleph/Documents/interindo-tooling/src/components/design-system/Header/index.js\";\n// Header Component\n// --------------------------------------------------------\nimport React, { Component } from 'react';\nimport classname from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './styles.scss'; // data dummy\n\nimport logoImageFixed from \"../../../assets/images/logo/logo-yellow-fixed.svg\";\nimport logoImage from \"../../../assets/images/logo/logo.svg\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showMobileNavigation: false,\n      scrolled: false\n    };\n\n    this.handleWindowScroll = () => {\n      const scroll = window.scrollY;\n\n      if (scroll === 0) {\n        if (window.innerWidth <= 768) {\n          this.setState({\n            scrolled: true\n          });\n        } else {\n          this.setState({\n            scrolled: false\n          });\n        }\n      } else {\n        if (window.innerWidth <= 768) {\n          this.setState({\n            scrolled: true\n          });\n        } else {\n          if (scroll > 40) {\n            this.setState({\n              scrolled: true\n            });\n          } else {\n            this.setState({\n              scrolled: false\n            });\n          }\n        }\n      }\n    };\n\n    this.addMobileNavigation = () => {\n      document.body.classList.toggle('remove-scroll');\n      this.setState(prevState => ({\n        showMobileNavigation: !prevState.showMobileNavigation\n      }));\n    };\n\n    this.handleResizeWindow = () => {\n      if (window.innerWidth <= 768) {\n        this.setState({\n          scrolled: true\n        });\n      } else {\n        this.setState({\n          scrolled: false\n        });\n        window.addEventListener('scroll', this.handleWindowScroll);\n      }\n    };\n\n    this.handleClickNavigation = e => {\n      const clicked = e.target.id;\n\n      if (this.state.isActive === clicked) {\n        if (window.innerWidth <= 768) {\n          document.body.classList.toggle('remove-scroll');\n          this.setState(prevState => ({\n            showMobileNavigation: !prevState.showMobileNavigation\n          }));\n        } else {\n          this.setState({\n            isActive: clicked\n          });\n        }\n      } else {\n        if (window.innerWidth <= 768) {\n          document.body.classList.toggle('remove-scroll');\n          this.setState(prevState => ({\n            showMobileNavigation: !prevState.showMobileNavigation\n          }));\n        } else {\n          this.setState({\n            isActive: clicked\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handleResizeWindow();\n    window.addEventListener(\"resize\", this.handleResizeWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResizeWindow);\n  }\n\n  render() {\n    const _this$state = this.state,\n          showMobileNavigation = _this$state.showMobileNavigation,\n          scrolled = _this$state.scrolled,\n          isActive = this.props.isActive;\n    const classNames = classname('ds-header', {\n      'show-navigation': showMobileNavigation,\n      'on-scroll': scrolled\n    });\n    return React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"logo-image\",\n      href: \".\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoImage,\n      alt: \"navbar-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      className: \"logo-image-fixed\",\n      href: \".\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoImageFixed,\n      alt: \"navbar-logo-fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hamburger-menu display-mobile-only\",\n      onClick: this.addMobileNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"icon\"))), React.createElement(\"div\", {\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"menu-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: `content-item ${this.state.isActive === \"our-product\" ? 'active' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/our-product\",\n      id: \"our-product\",\n      onClick: this.handleClickNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Our Product\")), React.createElement(\"li\", {\n      className: `content-item ${this.state.isActive === \"contact-us\" ? 'active' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/contact-us\",\n      id: \"contact-us\",\n      onClick: this.handleClickNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Contact Us\")), React.createElement(\"li\", {\n      className: `content-item ${this.state.isActive === \"about-us\" ? 'active' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about-us\",\n      id: \"about-us\",\n      onClick: this.handleClickNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"About Us\"))))));\n  }\n\n}\n\nHeader.propTypes = {\n  isActive: PropTypes.string\n};\nHeader.defaultProps = {\n  isActive: ''\n};\nexport default Header;","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/components/design-system/Header/index.js"],"names":["React","Component","classname","PropTypes","Link","Header","state","showMobileNavigation","scrolled","handleWindowScroll","scroll","window","scrollY","innerWidth","setState","addMobileNavigation","document","body","classList","toggle","prevState","handleResizeWindow","addEventListener","handleClickNavigation","e","clicked","target","id","isActive","componentDidMount","componentWillUnmount","removeEventListener","render","props","classNames","logoImage","logoImageFixed","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["// Header Component\n// --------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport classname from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\n\n// data dummy\nimport logoImageFixed from '../../../assets/images/logo/logo-yellow-fixed.svg';\nimport logoImage from '../../../assets/images/logo/logo.svg';\n\nclass Header extends Component {\n\n  state = {\n    showMobileNavigation: false,\n    scrolled: false\n  };\n\n  componentDidMount() {\n    this.handleResizeWindow();\n    window.addEventListener(\"resize\", this.handleResizeWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResizeWindow);\n  }\n\n  handleWindowScroll = () => {\n    const scroll = window.scrollY;\n    if (scroll === 0) {\n      if (window.innerWidth <= 768) {\n        this.setState({ scrolled: true });\n      }\n      else {\n        this.setState({ scrolled: false });\n      }\n    }\n    else {\n      if (window.innerWidth <= 768) {\n        this.setState({ scrolled: true });\n      }\n      else {\n        if (scroll > 40) {\n          this.setState({ scrolled: true });\n        } else {\n          this.setState({ scrolled: false });\n        }\n      }\n    }\n  };\n\n  addMobileNavigation = () => {\n    document.body.classList.toggle('remove-scroll');\n    this.setState(prevState => ({\n      showMobileNavigation: !prevState.showMobileNavigation\n    }));\n  }\n\n  handleResizeWindow = () => {\n    if (window.innerWidth <= 768) {\n      this.setState({ scrolled: true });\n    }\n    else {\n      this.setState({ scrolled: false });\n      window.addEventListener('scroll', this.handleWindowScroll);\n    }\n  }\n\n  handleClickNavigation = (e) => {\n    const clicked = e.target.id;\n\n    if (this.state.isActive === clicked) {\n      if (window.innerWidth <= 768) {\n        document.body.classList.toggle('remove-scroll');\n        this.setState(prevState => ({\n          showMobileNavigation: !prevState.showMobileNavigation\n        }));\n      }\n      else {\n        this.setState({ isActive: clicked });\n      }\n    }\n    else {\n      if (window.innerWidth <= 768) {\n        document.body.classList.toggle('remove-scroll');\n        this.setState(prevState => ({\n          showMobileNavigation: !prevState.showMobileNavigation\n        }));\n      }\n      else {\n        this.setState({ isActive: clicked })\n      }\n\n    }\n  }\n\n  render() {\n    const {\n      state: { showMobileNavigation, scrolled },\n      props: {\n        isActive\n      }\n    } = this;\n\n    const classNames = classname('ds-header', {\n      'show-navigation': showMobileNavigation,\n      'on-scroll': scrolled\n    });\n\n    return (\n      <div className={classNames}>\n        <div className=\"container\">\n          <div className=\"navbar-logo\">\n            <a className=\"logo-image\" href=\".\">\n              <img src={logoImage} alt=\"navbar-logo\" />\n            </a>\n            <a className=\"logo-image-fixed\" href=\".\">\n              <img src={logoImageFixed} alt=\"navbar-logo-fixed\" /></a>\n            <div className=\"hamburger-menu display-mobile-only\" onClick={this.addMobileNavigation}><i>icon</i></div>\n          </div>\n          <div className=\"navbar-menu\">\n            <ul className=\"menu-content\">\n              <li className={`content-item ${this.state.isActive === \"our-product\" ? 'active' : ''}`}>\n                <Link to='/our-product' id=\"our-product\" onClick={this.handleClickNavigation}>Our Product</Link>\n              </li>\n              <li className={`content-item ${this.state.isActive === \"contact-us\" ? 'active' : ''}`}>\n                <Link to='/contact-us' id=\"contact-us\" onClick={this.handleClickNavigation}>Contact Us</Link>\n              </li>\n              <li className={`content-item ${this.state.isActive === \"about-us\" ? 'active' : ''}`}>\n                <Link to='/about-us' id=\"about-us\" onClick={this.handleClickNavigation}>About Us</Link >\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nHeader.propTypes = {\n  isActive: PropTypes.string\n}\n\nHeader.defaultProps = {\n  isActive: ''\n}\n\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}