{"ast":null,"code":"var _jsxFileName = \"/Users/aleph/Documents/interindo-tooling/src/components/design-system/ImageCardList/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\nimport { Button } from 'semantic-ui-react';\nimport { getDataFromAPI, getDetailProductImages } from \"../../../config/redux/action\";\nimport { ProductCard } from \"../../../components\";\nimport { connect } from \"react-redux\"; // data dummy\n\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPopup: false,\n      handleImageClicked: ''\n    };\n\n    this.handleShowPopup = (status, imageData) => {\n      this.setState({\n        showPopup: !status,\n        handleImageClicked: imageData\n      });\n    };\n\n    this.handleClosePopup = status => {\n      this.setState({\n        showPopup: !status\n      });\n    };\n  }\n\n  // getDetail = e => {\n  //   const data = {\n  //     category: e.id\n  //   };\n  //   this.props.showDetailProductImages(data);\n  //   console.log(\"E pas klik detail \", e);\n  // };\n  render() {\n    const handleShowPopup = this.handleShowPopup,\n          handleClosePopup = this.handleClosePopup,\n          _this$state = this.state,\n          showPopup = _this$state.showPopup,\n          handleImageClicked = _this$state.handleImageClicked,\n          _this$props = this.props,\n          className = _this$props.className,\n          data = _this$props.data;\n    const classNames = classname('ds-image-card-list', className);\n    return React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, moreImage.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, data.map(image => {\n      return React.createElement(LazyLoad, {\n        height: 300,\n        debounce: 150,\n        offset: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(ImageCard // imageId='product-1'\n      , {\n        imageCard: image.data.imageUrl,\n        handleShowPopup: handleShowPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"INI LOADING\")), React.createElement(ImageModal, {\n      image: handleImageClicked,\n      showPopup: showPopup,\n      handleClosePopup: handleClosePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string\n  })\n};\nImageCardList.defaultProps = {\n  className: '',\n  data: []\n};\n\nconst reduxDispatch = dispatch => ({\n  getNotes: data => dispatch(getDataFromAPI(data)),\n  showDetailProductImages: data => dispatch(getDetailProductImages(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(ImageCardList);","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/components/design-system/ImageCardList/index.js"],"names":["React","Component","Fragment","PropTypes","classname","FadeIn","LazyLoad","ImageCard","ImageModal","Button","getDataFromAPI","getDetailProductImages","ProductCard","connect","productImg1","productImg2","ImageCardList","state","showPopup","handleImageClicked","handleShowPopup","status","imageData","setState","handleClosePopup","render","props","className","data","classNames","moreImage","length","map","image","imageUrl","propTypes","string","shape","imageId","imageCard","defaultProps","reduxDispatch","dispatch","getNotes","showDetailProductImages","reduxState"],"mappings":"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","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\nimport { Button } from 'semantic-ui-react';\nimport {\n  getDataFromAPI,\n  getDetailProductImages\n} from \"../../../config/redux/action\";\nimport { ProductCard } from \"../../../components\";\nimport { connect } from \"react-redux\";\n\n\n// data dummy\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n\n\n  state = {\n    showPopup: false,\n    handleImageClicked: ''\n  }\n  \n  // componentDidMount() {\n  //   const user = \"user\";\n  //   this.props.getNotes(user);\n  // }\n\n  handleShowPopup = (status, imageData) => {\n    this.setState({\n      showPopup: !status,\n      handleImageClicked: imageData\n    });\n  };\n\n  handleClosePopup = (status) => {\n    this.setState({\n      showPopup: !status\n    });\n  };\n\n  // getDetail = e => {\n  //   const data = {\n  //     category: e.id\n  //   };\n  //   this.props.showDetailProductImages(data);\n  //   console.log(\"E pas klik detail \", e);\n  // };\n\n  render() {\n    const {\n      handleShowPopup,\n      handleClosePopup,\n      state: {\n        showPopup,\n        handleImageClicked\n      },\n      props: {\n        className,\n        data\n      }\n    } = this;\n    const classNames = classname('ds-image-card-list', className);\n\n    return (\n      <FadeIn>\n        <div className={classNames}>\n          {moreImage.length > 0 ? (\n            <Fragment>\n              {data.map(image => {\n                return (\n                  <LazyLoad height={300} debounce={150} offset={300}>\n                    <ImageCard\n                      // imageId='product-1'\n                      imageCard={image.data.imageUrl}\n                      handleShowPopup={handleShowPopup}\n                    />\n                  </LazyLoad>\n                );\n              })}\n            </Fragment>\n          ) : (\n              <p>INI LOADING</p>\n            )}\n        </div>\n\n        {/* Pop Up Image */}\n        <ImageModal\n          image={handleImageClicked}\n          showPopup={showPopup}\n          handleClosePopup={handleClosePopup}\n        />\n      </FadeIn>\n    );\n  }\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string,\n  })\n}\n\nImageCardList.defaultProps = {\n  className: '',\n  data: [],\n}\n\nconst reduxDispatch = dispatch => ({\n  getNotes: data => dispatch(getDataFromAPI(data)),\n  showDetailProductImages: data => dispatch(getDetailProductImages(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(ImageCardList);\n"]},"metadata":{},"sourceType":"module"}