{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\test1 updates\\\\interindo-tooling\\\\src\\\\components\\\\design-system\\\\ImageCardList\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\nimport { Button } from 'semantic-ui-react'; // data dummy\n\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPopup: false\n    };\n\n    this.handleShowPopup = status => {\n      this.setState({\n        showPopup: !status\n      });\n    };\n\n    this.handleClosePopup = status => {\n      this.setState({\n        showPopup: !status\n      });\n    };\n  }\n\n  render() {\n    const handleShowPopup = this.handleShowPopup,\n          handleClosePopup = this.handleClosePopup,\n          showPopup = this.state.showPopup,\n          _this$props = this.props,\n          className = _this$props.className,\n          data = _this$props.data;\n    const classNames = classname('ds-image-card-list', className);\n    return React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(LazyLoad, {\n      height: 150,\n      debounce: 150,\n      offset: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      imageId: \"product-1\",\n      imageCard: productImg1,\n      handleShowPopup: handleShowPopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(LazyLoad, {\n      height: 150,\n      debounce: 150,\n      offset: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      imageId: \"product-1\",\n      imageCard: productImg2,\n      onClick: () => handleShowPopup(showPopup),\n      handleShowPopup: handleShowPopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(LazyLoad, {\n      height: 150,\n      debounce: 150,\n      offset: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      imageId: \"product-1\",\n      imageCard: productImg1,\n      handleShowPopup: handleShowPopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(ImageModal, {\n      showPopup: showPopup,\n      handleClosePopup: handleClosePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string\n  })\n};\nImageCardList.defaultProps = {\n  className: '',\n  data: []\n};\nexport default ImageCardList;","map":{"version":3,"sources":["C:/File Ch/test1 updates/interindo-tooling/src/components/design-system/ImageCardList/index.js"],"names":["React","Component","PropTypes","classname","FadeIn","LazyLoad","ImageCard","ImageModal","Button","productImg1","productImg2","ImageCardList","state","showPopup","handleShowPopup","status","setState","handleClosePopup","render","props","className","data","classNames","propTypes","string","shape","imageId","imageCard","defaultProps"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classname from 'classnames';\r\nimport FadeIn from 'react-fade-in';\r\nimport './styles.scss';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { ImageCard, ImageModal} from '../../../components';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\n// data dummy\r\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\r\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\r\n\r\nclass ImageCardList extends Component {\r\n\r\n  // componentDidMount(){\r\n  //   this.handleClickProductCard()\r\n  // }\r\n\r\n  // componentWillUnmount(){\r\n  //   this.handleClickProductCard()\r\n  // }\r\n\r\n  state = {\r\n    showPopup: false\r\n  }\r\n\r\n  handleShowPopup = (status) => {\r\n    this.setState({\r\n      showPopup: !status\r\n    });\r\n  };\r\n\r\n  handleClosePopup = (status) => {\r\n    this.setState({\r\n      showPopup: !status\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleShowPopup,\r\n      handleClosePopup,\r\n      state: {\r\n        showPopup\r\n      },\r\n      props: {\r\n        className,\r\n        data\r\n      }\r\n    } = this;\r\n    const classNames = classname('ds-image-card-list', className);\r\n\r\n    return (\r\n      <FadeIn>\r\n        <div className={classNames}>\r\n          {/* {data.map((value, index) => (\r\n            <ProductCard\r\n              key={index}\r\n              productId={value.productId}\r\n              productImage={value.productImage}\r\n              productTitle={value.productTitle}\r\n            />\r\n          ))} */}\r\n\r\n          <LazyLoad height={150} debounce={150} offset={150}>\r\n            <ImageCard\r\n              imageId='product-1'\r\n              imageCard={productImg1}\r\n              handleShowPopup={handleShowPopup}\r\n            />\r\n          </LazyLoad>\r\n          <LazyLoad height={150} debounce={150} offset={150}>\r\n            <ImageCard\r\n              imageId='product-1'\r\n              imageCard={productImg2}\r\n              onClick={() => handleShowPopup(showPopup)}\r\n              handleShowPopup={handleShowPopup}\r\n            />\r\n          </LazyLoad>\r\n          <LazyLoad height={150} debounce={150} offset={150}>\r\n            <ImageCard\r\n              imageId='product-1'\r\n              imageCard={productImg1}\r\n              handleShowPopup={handleShowPopup}\r\n            />\r\n          </LazyLoad>\r\n\r\n          {/* <div className='view-more-wrapper'>\r\n            <Button\r\n              circular\r\n              className='view-more-button'\r\n              color='yellow'\r\n              onClick={this.handleClickMoreButton}\r\n            >\r\n              View More\r\n            </Button>\r\n          </div> */}\r\n\r\n\r\n          {/* Pop Up Image */}\r\n          <ImageModal\r\n            showPopup= {showPopup}\r\n            handleClosePopup={handleClosePopup}\r\n          />\r\n\r\n        </div>\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nImageCardList.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.shape({\r\n    imageId: PropTypes.string,\r\n    imageCard: PropTypes.string,\r\n  })\r\n}\r\n\r\nImageCardList.defaultProps = {\r\n  className: '',\r\n  data: [],\r\n}\r\n\r\nexport default ImageCardList;\r\n"]},"metadata":{},"sourceType":"module"}