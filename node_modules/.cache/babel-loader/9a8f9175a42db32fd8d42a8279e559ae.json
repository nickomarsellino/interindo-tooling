{"ast":null,"code":"var _jsxFileName = \"/Users/aleph/Documents/interindo-tooling/src/container/pages/AdminPages/Dashboard/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { addDataToAPI, getDataFromAPI, logOutUser } from \"../../../../config/redux/action\";\nimport { connect } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { storage } from \"../../../../config/firebase\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport * as moment from \"moment\";\nimport NavbarAdmin from \"../NavbarAdmin\";\nimport ImageModal from '../Modal';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      createdDate: new Date().getTime(),\n      createdBy: \"\",\n      image: null,\n      imageUrl: \"\",\n      onModalShow: false,\n      productsDetail: \"\",\n      productsId: \"\",\n      email: \"\"\n    };\n\n    this.handleSaveNote = e => {\n      e.preventDefault(); // GET LOCAL STORAGE\n\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData);\n      const image = this.state.image;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {// progress function ....\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(imageUrl => {\n          console.log(imageUrl);\n          this.setState({\n            imageUrl\n          });\n          const data = {\n            title: this.state.title,\n            content: this.state.content,\n            createdDate: this.state.createdDate,\n            userId: userData.uid,\n            imageUrl: this.state.imageUrl\n          };\n          console.log(\"Data \", data);\n          this.props.saveNotes(data);\n        });\n      });\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n\n      console.log(this.state.image);\n    };\n\n    this.getDetail = e => {\n      this.setState({\n        onModalShow: true,\n        productsDetail: e.data,\n        productsId: e.id\n      });\n      console.log(\"Click\", e);\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        onModalShow: false\n      });\n    };\n\n    this.logOut = () => {\n      console.log(\"TEST\");\n      this.props.logout();\n      const history = this.props.history;\n      history.push(\"/login\");\n    };\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    console.log(\"Didmount userData \", userData); // if (this.state.email === \"\") {\n    //   this.props.history.push('/login');\n    // } else {\n\n    this.setState({\n      email: userData.email\n    }); // Call getDataAPI from props\n\n    this.props.getNotes(userData.uid); // }\n\n    var storageRef = storage.ref();\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          createdDate = _this$state.createdDate,\n          image = _this$state.image,\n          imageUrl = _this$state.imageUrl;\n    const notes = this.props.notes;\n    console.log(\"Hasil notes \", notes);\n    console.log(this.state.email);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ImageModal, {\n      onModalShow: this.state.onModalShow,\n      onCloseClick: () => this.onCloseClick(),\n      productsId: this.state.productsId,\n      productsDetail: this.state.productsDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(NavbarAdmin, {\n      userEmail: this.state.email,\n      onLogOutClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      style: {\n        marginLeft: \"25%\",\n        marginRight: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      value: title,\n      onChange: e => this.onInputChange(e, \"title\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputPassword1\",\n      value: content,\n      onChange: e => this.onInputChange(e, \"content\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.handleSaveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), notes.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        key: bebas.id,\n        style: {\n          width: \"50%\",\n          cursor: \"pointer\"\n        },\n        onClick: () => {\n          this.getDetail(bebas);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, bebas.data.DataUtama.title), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, bebas.data.DataUtama.content), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, moment(bebas.data.DataUtama.createdDate).format(\"LLLL\")), React.createElement(\"a\", {\n        href: bebas.data.DataUtama.imageUrl,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: bebas.data.DataUtama.imageUrl,\n        alt: \"\",\n        height: \"250px\",\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }));\n    })) : null);\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data)),\n  logout: data => dispatch(logOutUser())\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/container/pages/AdminPages/Dashboard/index.js"],"names":["React","Component","Fragment","addDataToAPI","getDataFromAPI","logOutUser","connect","Card","Button","storage","moment","NavbarAdmin","ImageModal","Dashboard","state","title","content","createdDate","Date","getTime","createdBy","image","imageUrl","onModalShow","productsDetail","productsId","email","handleSaveNote","e","preventDefault","userData","JSON","parse","localStorage","getItem","console","log","uploadTask","ref","name","put","on","snapshot","error","child","getDownloadURL","then","setState","data","userId","uid","props","saveNotes","onInputChange","type","target","value","handleImageChange","files","getDetail","id","onCloseClick","logOut","logout","history","push","componentDidMount","getNotes","storageRef","render","notes","marginLeft","marginRight","length","map","bebas","width","cursor","DataUtama","format","reduxState","user","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { addDataToAPI, getDataFromAPI, logOutUser } from \"../../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { storage } from \"../../../../config/firebase\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as moment from \"moment\";\r\nimport NavbarAdmin from \"../NavbarAdmin\";\r\n\r\nimport ImageModal from '../Modal';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    createdDate: new Date().getTime(),\r\n    createdBy: \"\",\r\n    image: null,\r\n    imageUrl: \"\",\r\n    onModalShow: false,\r\n    productsDetail: \"\",\r\n    productsId: \"\",\r\n    email: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"Didmount userData \", userData);\r\n\r\n    // if (this.state.email === \"\") {\r\n    //   this.props.history.push('/login');\r\n    // } else {\r\n      this.setState({\r\n        email : userData.email\r\n      })\r\n      // Call getDataAPI from props\r\n      this.props.getNotes(userData.uid);\r\n    // }\r\n\r\n    var storageRef = storage.ref();\r\n  }\r\n\r\n  handleSaveNote = e => {\r\n    e.preventDefault();\r\n    // GET LOCAL STORAGE\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ....\r\n      },\r\n      error => {\r\n        // error function ....\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ....\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(imageUrl => {\r\n            console.log(imageUrl);\r\n            this.setState({ imageUrl });\r\n\r\n            const data = {\r\n              title: this.state.title,\r\n              content: this.state.content,\r\n              createdDate: this.state.createdDate,\r\n              userId: userData.uid,\r\n              imageUrl: this.state.imageUrl\r\n            };\r\n            console.log(\"Data \", data);\r\n\r\n            this.props.saveNotes(data);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n    console.log(this.state.image)\r\n  };\r\n\r\n  getDetail = e => {\r\n    this.setState({\r\n      onModalShow: true,\r\n      productsDetail: e.data,\r\n      productsId: e.id\r\n    })\r\n    console.log(\"Click\", e);\r\n  };\r\n\r\n  onCloseClick = () => {\r\n    this.setState({\r\n      onModalShow: false\r\n    })\r\n  };\r\n\r\n  logOut = () => {\r\n    console.log(\"TEST\");\r\n    this.props.logout();\r\n    const { history } = this.props;\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { title, content, createdDate, image, imageUrl } = this.state;\r\n    const { notes } = this.props;\r\n    console.log(\"Hasil notes \", notes);\r\n    console.log(this.state.email)\r\n    return (\r\n      <div className=\"container\">\r\n      <ImageModal onModalShow = {this.state.onModalShow} onCloseClick = {()=>this.onCloseClick()} productsId = {this.state.productsId}  productsDetail = {this.state.productsDetail} />\r\n      <NavbarAdmin userEmail = {this.state.email} onLogOutClick = {this.logOut} />  \r\n      <form style={{ marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n          <br />\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              value={title}\r\n              onChange={e => this.onInputChange(e, \"title\")}\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">Content</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              value={content}\r\n              onChange={e => this.onInputChange(e, \"content\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input type=\"file\" onChange={this.handleImageChange} />\r\n          </div>\r\n          <br />\r\n          <button class=\"btn btn-primary\" onClick={this.handleSaveNote}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        {notes.length > 0 ? (\r\n          <Fragment>\r\n            {notes.map(bebas => {\r\n              return (\r\n                <div\r\n                  key={bebas.id}\r\n                  style={{ width: \"50%\", cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    this.getDetail(bebas);\r\n                  }}\r\n                  \r\n                >\r\n                  <Card>\r\n                    <Card.Header as=\"h5\">{bebas.data.DataUtama.title}</Card.Header>\r\n                    <Card.Body>\r\n                      <Card.Title>{bebas.data.DataUtama.content}</Card.Title>\r\n                      <Card.Text>\r\n                        {moment(bebas.data.DataUtama.createdDate).format(\"LLLL\")}\r\n                      </Card.Text>\r\n                      <a href={bebas.data.DataUtama.imageUrl} target=\"_blank\">\r\n                        <img\r\n                          src={bebas.data.DataUtama.imageUrl}\r\n                          alt=\"\"\r\n                          height=\"250px\"\r\n                          width=\"100%\"\r\n                        ></img>\r\n                      </a>\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  userData: state.user,\r\n  notes: state.notes\r\n  // Dari actionnya yang berhubung ke reducer\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  saveNotes: data => dispatch(addDataToAPI(data)),\r\n  getNotes: data => dispatch(getDataFromAPI(data)),\r\n  logout: data => dispatch(logOutUser())\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}