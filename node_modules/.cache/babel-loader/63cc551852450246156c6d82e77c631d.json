{"ast":null,"code":"var _jsxFileName = \"/Users/aleph/Documents/interindo-tooling/src/components/design-system/ImageCardList/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\nimport { Button } from 'semantic-ui-react'; // data dummy\n\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n  // componentDidMount(){\n  //   this.handleClickProductCard()\n  // }\n  // componentWillUnmount(){\n  //   this.handleClickProductCard()\n  // }\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          data = _this$props.data;\n    const classNames = classname('ds-image-card-list', className);\n    return React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(LazyLoad, {\n      height: 300,\n      debounce: 150,\n      offset: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      imageId: \"product-1\",\n      imageCard: productImg1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(LazyLoad, {\n      height: 300,\n      debounce: 150,\n      offset: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      imageId: \"product-1\",\n      imageCard: productImg2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(LazyLoad, {\n      height: 300,\n      debounce: 150,\n      offset: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      imageId: \"product-1\",\n      imageCard: productImg1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"view-more-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      className: \"view-more-button\",\n      color: \"yellow\",\n      onClick: this.handleClickMoreButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"View More\")), React.createElement(ImageModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string\n  })\n};\nImageCardList.defaultProps = {\n  className: '',\n  data: []\n};\nexport default ImageCardList;","map":{"version":3,"sources":["/Users/aleph/Documents/interindo-tooling/src/components/design-system/ImageCardList/index.js"],"names":["React","Component","PropTypes","classname","FadeIn","LazyLoad","ImageCard","ImageModal","Button","productImg1","productImg2","ImageCardList","render","props","className","data","classNames","handleClickMoreButton","propTypes","string","shape","imageId","imageCard","defaultProps"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAqC,qBAArC;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAOC,WAAP,MAAwB,kDAAxB;;AAEA,MAAMC,aAAN,SAA4BV,SAA5B,CAAsC;AAEpC;AACA;AACA;AAEA;AACA;AACA;AAEAW,EAAAA,MAAM,GAAG;AAAA,wBAMH,IANG,CAELC,KAFK;AAAA,UAGHC,SAHG,eAGHA,SAHG;AAAA,UAIHC,IAJG,eAIHA,IAJG;AAOP,UAAMC,UAAU,GAAGb,SAAS,CAAC,oBAAD,EAAuBW,SAAvB,CAA5B;AACA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,GAAlB;AAAuB,MAAA,QAAQ,EAAE,GAAjC;AAAsC,MAAA,MAAM,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAEP,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,EAgBE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,GAAlB;AAAuB,MAAA,QAAQ,EAAE,GAAjC;AAAsC,MAAA,MAAM,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAEC,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EAsBE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,GAAlB;AAAuB,MAAA,QAAQ,EAAE,GAAjC;AAAsC,MAAA,MAAM,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAED,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,EA6BE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,OAAO,EAAE,KAAKQ,qBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CA7BF,EA0CE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CF,CADF,CADF;AAmDD;;AArEmC;;AAwEtCN,aAAa,CAACO,SAAd,GAA0B;AACxBJ,EAAAA,SAAS,EAAEZ,SAAS,CAACiB,MADG;AAExBJ,EAAAA,IAAI,EAAEb,SAAS,CAACkB,KAAV,CAAgB;AACpBC,IAAAA,OAAO,EAAEnB,SAAS,CAACiB,MADC;AAEpBG,IAAAA,SAAS,EAAEpB,SAAS,CAACiB;AAFD,GAAhB;AAFkB,CAA1B;AAQAR,aAAa,CAACY,YAAd,GAA6B;AAC3BT,EAAAA,SAAS,EAAE,EADgB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAA7B;AAKA,eAAeJ,aAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal} from '../../../components';\nimport { Button } from 'semantic-ui-react';\n\n// data dummy\nimport productImg1 from '../../../assets/images/dummy/product-card-1.jpeg';\nimport productImg2 from '../../../assets/images/dummy/product-card-2.jpeg';\n\nclass ImageCardList extends Component {\n\n  // componentDidMount(){\n  //   this.handleClickProductCard()\n  // }\n\n  // componentWillUnmount(){\n  //   this.handleClickProductCard()\n  // }\n\n  render() {\n    const {\n      props: {\n        className,\n        data\n      }\n    } = this;\n    const classNames = classname('ds-image-card-list', className);\n    return (\n      <FadeIn>\n        <div className={classNames}>\n          {/* {data.map((value, index) => (\n            <ProductCard\n              key={index}\n              productId={value.productId}\n              productImage={value.productImage}\n              productTitle={value.productTitle}\n            />\n          ))} */}\n\n          <LazyLoad height={300} debounce={150} offset={300}>\n            <ImageCard\n              imageId='product-1'\n              imageCard={productImg1}\n            />\n          </LazyLoad>\n          <LazyLoad height={300} debounce={150} offset={300}>\n            <ImageCard\n              imageId='product-1'\n              imageCard={productImg2}\n            />\n          </LazyLoad>\n          <LazyLoad height={300} debounce={150} offset={300}>\n            <ImageCard\n              imageId='product-1'\n              imageCard={productImg1}\n            />\n          </LazyLoad>\n\n          <div className='view-more-wrapper'>\n            <Button\n              circular\n              className='view-more-button'\n              color='yellow'\n              onClick={this.handleClickMoreButton}\n            >\n              View More\n            </Button>\n          </div>\n\n\n          {/* Pop Up Image */}\n          <ImageModal\n          \n          />\n\n        </div>\n      </FadeIn>\n    );\n  }\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string,\n  })\n}\n\nImageCardList.defaultProps = {\n  className: '',\n  data: [],\n}\n\nexport default ImageCardList;\n"]},"metadata":{},"sourceType":"module"}