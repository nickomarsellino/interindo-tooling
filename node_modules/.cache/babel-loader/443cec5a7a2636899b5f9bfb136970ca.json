{"ast":null,"code":"import firebase, { database } from '../../firebase';\nexport const actionUserName = () => dispatch => {\n  setTimeout(() => {\n    return dispatch({\n      type: 'CHANGE_USER',\n      value: 'Raissa'\n    });\n  }, 1500);\n};\nexport const registerUserAPI = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      value: true\n    });\n    return firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(res => {\n      console.log(\"Response \", res); // Set isLoading jadi false lagi setelah selesai\n\n      dispatch({\n        type: 'CHANGE_LOADING',\n        value: false\n      });\n      resolve(true);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      dispatch({\n        type: 'CHANGE_LOADING',\n        value: false\n      });\n      resolve(false);\n    });\n  });\n};\nexport const loginUserAPI = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      value: true\n    });\n    firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n      console.log(\"Response \", res);\n      const userData = {\n        email: res.user.email,\n        uid: res.user.uid,\n        emailVerified: res.user.emailVerified,\n        refreshToken: res.user.refreshToken\n      }; // Set isLoading jadi false lagi setelah selesai\n\n      dispatch({\n        type: 'CHANGE_LOADING',\n        value: false\n      });\n      dispatch({\n        type: 'CHANGE_ISLOGIN',\n        value: true\n      });\n      dispatch({\n        type: 'CHANGE_USER',\n        value: userData\n      });\n      resolve(userData);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      dispatch({\n        type: 'CHANGE_LOADING',\n        value: false\n      });\n      dispatch({\n        type: 'CHANGE_ISLOGIN',\n        value: false\n      });\n      dispatch({\n        type: 'SHOW_ERRORMESSAGE',\n        value: errorMessage\n      });\n      reject(false);\n    });\n  });\n}; // Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\n\nexport const addDataToAPI = data => dispatch => {\n  database.ref('notesTEST/' + data.userId).push({\n    title: data.title,\n    content: data.content,\n    date: data.date,\n    createdBy: data.userId\n  });\n}; // Get data api using redux\n// export const getDataFromAPI = (userId) => (dispatch) => {\n//     var urlNotes = firebase.database().ref('notesTEST/' + userId);\n//     return new Promise((resolve, reject) => {\n//         urlNotes.on('value', function(snapshot) {\n//             // ubah object jadi Array\n//             const data = [];\n//             Object.keys( (snapshot.val()) &&  snapshot.val()).map(key => {\n//                 data.push({\n//                     id: key,\n//                     data: snapshot.val()[key]\n//                 })\n//             })\n//             console.log(\"Data pas getAPI \", data)\n//             dispatch({type: 'SET_NOTES', value: data})\n//             resolve(snapshot.val())\n//         });\n//     })\n// }","map":{"version":3,"sources":["C:/File Ch/react-js-firebase-crud-invoice/src/config/redux/action/index.js"],"names":["firebase","database","actionUserName","dispatch","setTimeout","type","value","registerUserAPI","data","Promise","resolve","reject","auth","createUserWithEmailAndPassword","email","password","then","res","console","log","catch","error","errorCode","code","errorMessage","message","loginUserAPI","signInWithEmailAndPassword","userData","user","uid","emailVerified","refreshToken","addDataToAPI","ref","userId","push","title","content","date","createdBy"],"mappings":"AAAA,OAAOA,QAAP,IAAkBC,QAAlB,QAAiC,gBAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAD,IAAc;AAC9CC,EAAAA,UAAU,CAAC,MAAM;AACb,WAAOD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAAD,CAAf;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAWL,QAAD,IAAc;AACnD,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCR,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAD,CAAR;AACA,WACIN,QAAQ,CAACY,IAAT,GAAgBC,8BAAhB,CAA+CL,IAAI,CAACM,KAApD,EAA2DN,IAAI,CAACO,QAAhE,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB,EADS,CAET;;AACAd,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAD,CAAR;AACAI,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KANL,EAOKU,KAPL,CAOW,UAAUC,KAAV,EAAiB;AACpB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACArB,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAD,CAAR;AACAI,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAfL,CADJ;AAkBH,GApBM,CAAP;AAqBH,CAtBM;AAyBP,OAAO,MAAMgB,YAAY,GAAIlB,IAAD,IAAWL,QAAD,IAAc;AAChD,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCR,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAACY,IAAT,GAAgBe,0BAAhB,CAA2CnB,IAAI,CAACM,KAAhD,EAAuDN,IAAI,CAACO,QAA5D,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACA,YAAMW,QAAQ,GAAG;AACbd,QAAAA,KAAK,EAAEG,GAAG,CAACY,IAAJ,CAASf,KADH;AAEbgB,QAAAA,GAAG,EAAEb,GAAG,CAACY,IAAJ,CAASC,GAFD;AAGbC,QAAAA,aAAa,EAAEd,GAAG,CAACY,IAAJ,CAASE,aAHX;AAIbC,QAAAA,YAAY,EAAGf,GAAG,CAACY,IAAJ,CAASG;AAJX,OAAjB,CAFS,CAQT;;AACA7B,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAD,CAAR;AACAH,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAD,CAAR;AACAH,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,KAAK,EAAEsB;AAA9B,OAAD,CAAR;AACAlB,MAAAA,OAAO,CAACkB,QAAD,CAAP;AACH,KAdL,EAeKR,KAfL,CAeW,UAAUC,KAAV,EAAiB;AACpB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACArB,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAD,CAAR;AACAH,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAD,CAAR;AACAH,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,KAAK,EAAEkB;AAApC,OAAD,CAAR;AACAb,MAAAA,MAAM,CAAC,KAAD,CAAN;AACH,KAzBL;AA0BH,GA5BM,CAAP;AA6BH,CA9BM,C,CAgCP;;AACA,OAAO,MAAMsB,YAAY,GAAIzB,IAAD,IAAWL,QAAD,IAAc;AAChDF,EAAAA,QAAQ,CAACiC,GAAT,CAAa,eAAe1B,IAAI,CAAC2B,MAAjC,EAAyCC,IAAzC,CAA8C;AAC1CC,IAAAA,KAAK,EAAE7B,IAAI,CAAC6B,KAD8B;AAE1CC,IAAAA,OAAO,EAAE9B,IAAI,CAAC8B,OAF4B;AAG1CC,IAAAA,IAAI,EAAE/B,IAAI,CAAC+B,IAH+B;AAI1CC,IAAAA,SAAS,EAAEhC,IAAI,CAAC2B;AAJ0B,GAA9C;AAMH,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import firebase, {database} from '../../firebase';\r\n\r\nexport const actionUserName = () => (dispatch) => {\r\n    setTimeout(() => {\r\n        return dispatch({ type: 'CHANGE_USER', value: 'Raissa' })\r\n    }, 1500)\r\n}\r\n\r\nexport const registerUserAPI = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({ type: 'CHANGE_LOADING', value: true })\r\n        return (\r\n            firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n                .then(res => {\r\n                    console.log(\"Response \", res);\r\n                    // Set isLoading jadi false lagi setelah selesai\r\n                    dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                    resolve(true)\r\n                })\r\n                .catch(function (error) {\r\n                    // Handle Errors here.\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    console.log(errorCode);\r\n                    console.log(errorMessage);\r\n                    dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                    resolve(false)\r\n                })\r\n        )\r\n    })\r\n}\r\n\r\n\r\nexport const loginUserAPI = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({ type: 'CHANGE_LOADING', value: true })\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n            .then(res => {\r\n                console.log(\"Response \", res);\r\n                const userData = {\r\n                    email: res.user.email,\r\n                    uid: res.user.uid,\r\n                    emailVerified: res.user.emailVerified,\r\n                    refreshToken : res.user.refreshToken\r\n                }\r\n                // Set isLoading jadi false lagi setelah selesai\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                dispatch({ type: 'CHANGE_ISLOGIN', value: true })\r\n                dispatch({ type: 'CHANGE_USER', value: userData })\r\n                resolve(userData)\r\n            })\r\n            .catch(function (error) {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorCode);\r\n                console.log(errorMessage);\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                dispatch({ type: 'CHANGE_ISLOGIN', value: false })\r\n                dispatch({ type: 'SHOW_ERRORMESSAGE', value: errorMessage})\r\n                reject(false)\r\n            })\r\n    })\r\n}\r\n\r\n// Post API from Dashboard -> Ini contoh yang pake redux yang bikin reducer dulu\r\nexport const addDataToAPI = (data) => (dispatch) => {\r\n    database.ref('notesTEST/' + data.userId).push({\r\n        title: data.title,\r\n        content: data.content,\r\n        date: data.date,\r\n        createdBy: data.userId\r\n    })\r\n}\r\n\r\n// Get data api using redux\r\n// export const getDataFromAPI = (userId) => (dispatch) => {\r\n//     var urlNotes = firebase.database().ref('notesTEST/' + userId);\r\n//     return new Promise((resolve, reject) => {\r\n//         urlNotes.on('value', function(snapshot) {\r\n//             // ubah object jadi Array\r\n//             const data = [];\r\n//             Object.keys( (snapshot.val()) &&  snapshot.val()).map(key => {\r\n//                 data.push({\r\n//                     id: key,\r\n//                     data: snapshot.val()[key]\r\n//                 })\r\n//             })\r\n//             console.log(\"Data pas getAPI \", data)\r\n//             dispatch({type: 'SET_NOTES', value: data})\r\n//             resolve(snapshot.val())\r\n//         });\r\n//     })\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}