{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\react-js-firebase-crud-invoice\\\\src\\\\containers\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { addDataToAPI, getDataFromAPI } from \"../../../config/redux/action\";\nimport { connect } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as moment from \"moment\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      date: \"\",\n      createdBy: \"\",\n      name: \"\",\n      receiptId: 0,\n      price1: 0,\n      price2: 0\n    };\n\n    this.handleSaveNote = () => {\n      // GET LOCAL STORAGE\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData);\n      const data = {\n        title: this.state.title,\n        content: this.state.content,\n        date: new Date().getTime(),\n        userId: userData.uid\n      };\n      this.props.saveNotes(data);\n      console.log(\"dataafterSUBMIT \", data);\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.createAndDownloadPdf = () => {\n      console.log(\"Clicked..!\");\n      axios.post(\"/Invoice/create-pdf\", this.state).then(() => axios.get(\"fetch-pdf\", {\n        responseType: \"blob\"\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: \"application/pdf\"\n        });\n        saveAs(pdfBlob, \"newPdf.pdf\");\n      });\n    };\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    console.log(\"Didmount userData \", userData); // Call getDataAPI from props\n\n    this.props.getNotes(userData.uid);\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          date = _this$state.date;\n    const notes = this.props.notes;\n    console.log(\"Hasil notes \", notes);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginLeft: \"25%\",\n        marginRight: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      value: title,\n      onChange: e => this.onInputChange(e, \"title\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      class: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputPassword1\",\n      value: content,\n      onChange: e => this.onInputChange(e, \"content\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.url || \"http://via.placeholder.com/400x300\",\n      alt: \"Uploaded images\",\n      height: \"300\",\n      width: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.handleSaveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), notes.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        key: bebas.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, bebas.data.title), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, bebas.data.content), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, moment(bebas.data.date).format(\"LLLL\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    })) : null);\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["C:/File Ch/react-js-firebase-crud-invoice/src/containers/pages/Dashboard/index.js"],"names":["React","Component","Fragment","addDataToAPI","getDataFromAPI","connect","Card","Button","axios","saveAs","moment","Dashboard","state","title","content","date","createdBy","name","receiptId","price1","price2","handleSaveNote","userData","JSON","parse","localStorage","getItem","console","log","data","Date","getTime","userId","uid","props","saveNotes","onInputChange","e","type","setState","target","value","createAndDownloadPdf","post","then","get","responseType","res","pdfBlob","Blob","componentDidMount","getNotes","render","notes","marginLeft","marginRight","progress","handleChange","handleUpload","url","length","map","bebas","id","format","reduxState","user","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { addDataToAPI, getDataFromAPI } from \"../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as moment from \"moment\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    date: \"\",\r\n    createdBy: \"\",\r\n    name: \"\",\r\n    receiptId: 0,\r\n    price1: 0,\r\n    price2: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"Didmount userData \", userData);\r\n    // Call getDataAPI from props\r\n    this.props.getNotes(userData.uid);\r\n  }\r\n\r\n  handleSaveNote = () => {\r\n    // GET LOCAL STORAGE\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n\r\n    const data = {\r\n      title: this.state.title,\r\n      content: this.state.content,\r\n      date: new Date().getTime(),\r\n      userId: userData.uid\r\n    };\r\n    this.props.saveNotes(data);\r\n    console.log(\"dataafterSUBMIT \", data);\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  createAndDownloadPdf = () => {\r\n    console.log(\"Clicked..!\");\r\n    axios\r\n      .post(\"/Invoice/create-pdf\", this.state)\r\n      .then(() => axios.get(\"fetch-pdf\", { responseType: \"blob\" }))\r\n      .then(res => {\r\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        saveAs(pdfBlob, \"newPdf.pdf\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { title, content, date } = this.state;\r\n    const { notes } = this.props;\r\n    console.log(\"Hasil notes \", notes);\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={{ marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              value={title}\r\n              onChange={e => this.onInputChange(e, \"title\")}\r\n            />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">Content</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              value={content}\r\n              onChange={e => this.onInputChange(e, \"content\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <progress value={this.state.progress} max=\"100\" />\r\n            <br />\r\n            <input type=\"file\" onChange={this.handleChange} />\r\n            <button onClick={this.handleUpload}>Upload</button>\r\n            <br />\r\n            <img\r\n              src={this.state.url || \"http://via.placeholder.com/400x300\"}\r\n              alt=\"Uploaded images\"\r\n              height=\"300\"\r\n              width=\"400\"\r\n            />\r\n          </div>\r\n          <button class=\"btn btn-primary\" onClick={this.handleSaveNote}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        {notes.length > 0 ? (\r\n          <Fragment>\r\n            {notes.map(bebas => {\r\n              return (\r\n                <div key={bebas.id}>\r\n                  <Card>\r\n                    <Card.Header as=\"h5\">{bebas.data.title}</Card.Header>\r\n                    <Card.Body>\r\n                      <Card.Title>{bebas.data.content}</Card.Title>\r\n                      <Card.Text>\r\n                        {moment(bebas.data.date).format(\"LLLL\")}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  userData: state.user,\r\n  notes: state.notes\r\n  // Dari actionnya yang berhubung ke reducer\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  saveNotes: data => dispatch(addDataToAPI(data)),\r\n  getNotes: data => dispatch(getDataFromAPI(data))\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}