{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\react-js-firebase-crud\\\\src\\\\containers\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { addDataToAPI, getDataFromAPI } from \"../../../config/redux/action\";\nimport { connect } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport { storage } from '../../../config/firebase';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as moment from \"moment\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      date: \"\",\n      createdBy: \"\",\n      image: null,\n      url: \"\"\n    };\n\n    this.handleSaveNote = () => {\n      // GET LOCAL STORAGE\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData);\n      const data = {\n        title: this.state.title,\n        content: this.state.content,\n        date: new Date().getTime(),\n        userId: userData.uid\n      };\n      this.props.saveNotes(data);\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      } // console.log(this.state.image)\n\n    };\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    console.log(\"Didmount userData \", userData);\n    var storageRef = storage.ref(); // Call getDataAPI from props\n\n    this.props.getNotes(userData.uid);\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          date = _this$state.date,\n          image = _this$state.image,\n          url = _this$state.url;\n    const notes = this.props.notes;\n    console.log(\"Hasil notes \", notes);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginLeft: \"25%\",\n        marginRight: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      value: title,\n      onChange: e => this.onInputChange(e, \"title\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      class: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputPassword1\",\n      value: content,\n      onChange: e => this.onInputChange(e, \"content\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.handleSaveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), notes.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        key: bebas.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, bebas.data.title), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, bebas.data.content), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, moment(bebas.data.date).format(\"LLLL\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    })) : null);\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["C:/File Ch/react-js-firebase-crud/src/containers/pages/Dashboard/index.js"],"names":["React","Component","Fragment","addDataToAPI","getDataFromAPI","connect","Card","Button","axios","saveAs","storage","moment","Dashboard","state","title","content","date","createdBy","image","url","handleSaveNote","userData","JSON","parse","localStorage","getItem","console","log","data","Date","getTime","userId","uid","props","saveNotes","onInputChange","e","type","setState","target","value","handleImageChange","files","componentDidMount","storageRef","ref","getNotes","render","notes","marginLeft","marginRight","length","map","bebas","id","format","reduxState","user","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { addDataToAPI, getDataFromAPI } from \"../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { storage } from '../../../config/firebase'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as moment from \"moment\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    date: \"\",\r\n    createdBy: \"\",\r\n    image: null,\r\n    url: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"Didmount userData \", userData);\r\n    var storageRef = storage.ref();\r\n\r\n    // Call getDataAPI from props\r\n    this.props.getNotes(userData.uid);\r\n  }\r\n\r\n  handleSaveNote = () => {\r\n    // GET LOCAL STORAGE\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n\r\n    const data = {\r\n      title: this.state.title,\r\n      content: this.state.content,\r\n      date: new Date().getTime(),\r\n      userId: userData.uid\r\n    };\r\n    this.props.saveNotes(data);\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n    // console.log(this.state.image)\r\n  };\r\n\r\n  render() {\r\n    const { title, content, date, image, url } = this.state;\r\n    const { notes } = this.props;\r\n    console.log(\"Hasil notes \", notes);\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={{ marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              value={title}\r\n              onChange={e => this.onInputChange(e, \"title\")}\r\n            />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">Content</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              value={content}\r\n              onChange={e => this.onInputChange(e, \"content\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input type=\"file\" onChange={this.handleImageChange} />\r\n          </div>\r\n          <br />\r\n          <button class=\"btn btn-primary\" onClick={this.handleSaveNote}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        {notes.length > 0 ? (\r\n          <Fragment>\r\n            {notes.map(bebas => {\r\n              return (\r\n                <div key={bebas.id}>\r\n                  <Card>\r\n                    <Card.Header as=\"h5\">{bebas.data.title}</Card.Header>\r\n                    <Card.Body>\r\n                      <Card.Title>{bebas.data.content}</Card.Title>\r\n                      <Card.Text>\r\n                        {moment(bebas.data.date).format(\"LLLL\")}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  userData: state.user,\r\n  notes: state.notes\r\n  // Dari actionnya yang berhubung ke reducer\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  saveNotes: data => dispatch(addDataToAPI(data)),\r\n  getNotes: data => dispatch(getDataFromAPI(data))\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}