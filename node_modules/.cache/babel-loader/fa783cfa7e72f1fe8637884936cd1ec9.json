{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\react-js-firebase-crud\\\\src\\\\containers\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { addDataToAPI, getDataFromAPI } from \"../../../config/redux/action\";\nimport { connect } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport { storage } from '../../../config/firebase';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as moment from \"moment\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      date: \"\",\n      createdBy: \"\"\n    };\n\n    this.handleSaveNote = () => {\n      // GET LOCAL STORAGE\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      console.log(\"userData after parse json \", userData);\n      const image = this.state.image;\n      const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {// progress function ....\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n      const data = {\n        title: this.state.title,\n        content: this.state.content,\n        date: new Date().getTime(),\n        userId: userData.uid,\n        url: this.state.url\n      };\n      this.props.saveNotes(data);\n    };\n\n    this.onInputChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      } // console.log(this.state.image)\n\n    };\n\n    this.state = {\n      image: null,\n      url: \"\"\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSaveNote = this.handleSaveNote.bind(this);\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    console.log(\"Didmount userData \", userData);\n    var storageRef = storage.ref(); // Call getDataAPI from props\n\n    this.props.getNotes(userData.uid);\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          date = _this$state.date;\n    const notes = this.props.notes;\n    console.log(\"Hasil notes \", notes);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginLeft: \"25%\",\n        marginRight: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      value: title,\n      onChange: e => this.onInputChange(e, \"title\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      class: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"exampleInputPassword1\",\n      value: content,\n      onChange: e => this.onInputChange(e, \"content\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.handleSaveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), notes.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, notes.map(bebas => {\n      return React.createElement(\"div\", {\n        key: bebas.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, bebas.data.title), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.url || \"http://via.placeholder.com/400x300\",\n        alt: \"Uploaded images\",\n        height: \"300\",\n        width: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, bebas.data.content), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, moment(bebas.data.date).format(\"LLLL\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }));\n    })) : null);\n  }\n\n}\n\nconst reduxState = state => ({\n  userData: state.user,\n  notes: state.notes // Dari actionnya yang berhubung ke reducer\n\n});\n\nconst reduxDispatch = dispatch => ({\n  //saveNotes: data => dispatch(addDataToAPI(data)),\n  getNotes: data => dispatch(getDataFromAPI(data))\n});\n\nexport default connect(reduxState, reduxDispatch)(Dashboard);","map":{"version":3,"sources":["C:/File Ch/react-js-firebase-crud/src/containers/pages/Dashboard/index.js"],"names":["React","Component","Fragment","addDataToAPI","getDataFromAPI","connect","Card","Button","axios","saveAs","storage","moment","Dashboard","constructor","props","state","title","content","date","createdBy","handleSaveNote","userData","JSON","parse","localStorage","getItem","console","log","image","uploadTask","ref","name","put","on","snapshot","error","child","getDownloadURL","then","url","setState","data","Date","getTime","userId","uid","saveNotes","onInputChange","e","type","target","value","handleImageChange","files","bind","componentDidMount","storageRef","getNotes","render","notes","marginLeft","marginRight","length","map","bebas","id","format","reduxState","user","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { addDataToAPI, getDataFromAPI } from \"../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { storage } from '../../../config/firebase'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as moment from \"moment\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    date: \"\",\r\n    createdBy: \"\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: null,\r\n      url: \"\"\r\n    };\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.handleSaveNote = this.handleSaveNote.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"Didmount userData \", userData);\r\n    var storageRef = storage.ref();\r\n\r\n    // Call getDataAPI from props\r\n    this.props.getNotes(userData.uid);\r\n  }\r\n\r\n  handleSaveNote = () => {\r\n    // GET LOCAL STORAGE\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(\"userData after parse json \", userData);\r\n\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ....\r\n      },\r\n      error => {\r\n        // error function ....\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ....\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            console.log(url);\r\n            this.setState({ url });\r\n          });\r\n      }\r\n    );\r\n\r\n    const data = {\r\n      title: this.state.title,\r\n      content: this.state.content,\r\n      date: new Date().getTime(),\r\n      userId: userData.uid,\r\n      url: this.state.url\r\n    };\r\n    this.props.saveNotes(data);\r\n  };\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n    // console.log(this.state.image)\r\n  };\r\n\r\n  render() {\r\n    const { title, content, date } = this.state;\r\n    const { notes } = this.props;\r\n    console.log(\"Hasil notes \", notes);\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={{ marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              value={title}\r\n              onChange={e => this.onInputChange(e, \"title\")}\r\n            />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">Content</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              value={content}\r\n              onChange={e => this.onInputChange(e, \"content\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input type=\"file\" onChange={this.handleImageChange} />\r\n          </div>\r\n          <br />\r\n          <button class=\"btn btn-primary\" onClick={this.handleSaveNote}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        {notes.length > 0 ? (\r\n          <Fragment>\r\n            {notes.map(bebas => {\r\n              return (\r\n                <div key={bebas.id}>\r\n                  <Card>\r\n                    <Card.Header as=\"h5\">{bebas.data.title}</Card.Header>\r\n                    <Card.Body>\r\n                      <img\r\n                        src={\r\n                          this.state.url || \"http://via.placeholder.com/400x300\"\r\n                        }\r\n                        alt=\"Uploaded images\"\r\n                        height=\"300\"\r\n                        width=\"400\"\r\n                      />\r\n                      <Card.Title>{bebas.data.content}</Card.Title>\r\n                      <Card.Text>\r\n                        {moment(bebas.data.date).format(\"LLLL\")}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = state => ({\r\n  userData: state.user,\r\n  notes: state.notes\r\n  // Dari actionnya yang berhubung ke reducer\r\n});\r\n\r\nconst reduxDispatch = dispatch => ({\r\n  //saveNotes: data => dispatch(addDataToAPI(data)),\r\n  getNotes: data => dispatch(getDataFromAPI(data))\r\n});\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}