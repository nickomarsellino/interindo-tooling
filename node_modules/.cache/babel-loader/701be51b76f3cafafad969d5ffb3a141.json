{"ast":null,"code":"var _jsxFileName = \"C:\\\\File Ch\\\\test1 updates\\\\asdf\\\\src\\\\components\\\\design-system\\\\ImageCardList\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport './styles.scss';\nimport LazyLoad from 'react-lazyload';\nimport { ImageCard, ImageModal } from '../../../components';\n\nclass ImageCardList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPopup: false,\n      handleImageClicked: ''\n    };\n\n    this.handleShowPopup = (status, imageData) => {\n      this.setState({\n        showPopup: !status,\n        handleImageClicked: imageData\n      });\n    };\n\n    this.handleClosePopup = status => {\n      this.setState({\n        showPopup: !status\n      });\n    };\n  }\n\n  render() {\n    const handleShowPopup = this.handleShowPopup,\n          handleClosePopup = this.handleClosePopup,\n          _this$state = this.state,\n          showPopup = _this$state.showPopup,\n          handleImageClicked = _this$state.handleImageClicked,\n          _this$props = this.props,\n          className = _this$props.className,\n          data = _this$props.data;\n    const classNames = classname('ds-image-card-list', className);\n    return React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, data.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, data.map(image => {\n      if (image.data.imageUrl === 'null') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(LazyLoad, {\n          height: 50,\n          debounce: 150,\n          offset: 50,\n          key: image.data.imageUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(ImageCard, {\n          imageCard: image.data.imageUrl,\n          handleShowPopup: handleShowPopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"INI LOADING\")), React.createElement(ImageModal, {\n      image: handleImageClicked,\n      showPopup: showPopup,\n      handleClosePopup: handleClosePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nImageCardList.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.shape({\n    imageId: PropTypes.string,\n    imageCard: PropTypes.string\n  })\n};\nImageCardList.defaultProps = {\n  className: '',\n  data: []\n};\nexport default ImageCardList;","map":{"version":3,"sources":["C:/File Ch/test1 updates/asdf/src/components/design-system/ImageCardList/index.js"],"names":["React","Component","Fragment","PropTypes","classname","FadeIn","LazyLoad","ImageCard","ImageModal","ImageCardList","state","showPopup","handleImageClicked","handleShowPopup","status","imageData","setState","handleClosePopup","render","props","className","data","classNames","length","map","image","imageUrl","propTypes","string","shape","imageId","imageCard","defaultProps"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCS,KAFoC,GAE5B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,kBAAkB,EAAE;AAFd,KAF4B;;AAAA,SAOpCC,eAPoC,GAOlB,CAACC,MAAD,EAASC,SAAT,KAAuB;AACvC,WAAKC,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAE,CAACG,MADA;AAEZF,QAAAA,kBAAkB,EAAEG;AAFR,OAAd;AAID,KAZmC;;AAAA,SAcpCE,gBAdoC,GAchBH,MAAD,IAAY;AAC7B,WAAKE,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAE,CAACG;AADA,OAAd;AAGD,KAlBmC;AAAA;;AAoBpCI,EAAAA,MAAM,GAAG;AAAA,UAELL,eAFK,GAYH,IAZG,CAELA,eAFK;AAAA,UAGLI,gBAHK,GAYH,IAZG,CAGLA,gBAHK;AAAA,wBAYH,IAZG,CAILP,KAJK;AAAA,UAKHC,SALG,eAKHA,SALG;AAAA,UAMHC,kBANG,eAMHA,kBANG;AAAA,wBAYH,IAZG,CAQLO,KARK;AAAA,UASHC,SATG,eASHA,SATG;AAAA,UAUHC,IAVG,eAUHA,IAVG;AAaP,UAAMC,UAAU,GAAGlB,SAAS,CAAC,oBAAD,EAAuBgB,SAAvB,CAA5B;AAEA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,MAAL,GAAc,CAAd,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,GAAL,CAASC,KAAK,IAAI;AACjB,UAAGA,KAAK,CAACJ,IAAN,CAAWK,QAAX,KAAwB,MAA3B,EAAkC;AAChC,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,MAKK;AACH,eACE,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAE,EAAlB;AAAsB,UAAA,QAAQ,EAAE,GAAhC;AAAqC,UAAA,MAAM,EAAE,EAA7C;AAAiD,UAAA,GAAG,EAAED,KAAK,CAACJ,IAAN,CAAWK,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AACE,UAAA,SAAS,EAAED,KAAK,CAACJ,IAAN,CAAWK,QADxB;AAEE,UAAA,eAAe,EAAEb,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAQD;AACF,KAhBA,CADH,CADD,GAqBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAtBN,CADF,EA4BE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAED,kBADT;AAEE,MAAA,SAAS,EAAED,SAFb;AAGE,MAAA,gBAAgB,EAAEM,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CADF;AAoCD;;AAvEmC;;AA0EtCR,aAAa,CAACkB,SAAd,GAA0B;AACxBP,EAAAA,SAAS,EAAEjB,SAAS,CAACyB,MADG;AAExBP,EAAAA,IAAI,EAAElB,SAAS,CAAC0B,KAAV,CAAgB;AACpBC,IAAAA,OAAO,EAAE3B,SAAS,CAACyB,MADC;AAEpBG,IAAAA,SAAS,EAAE5B,SAAS,CAACyB;AAFD,GAAhB;AAFkB,CAA1B;AAQAnB,aAAa,CAACuB,YAAd,GAA6B;AAC3BZ,EAAAA,SAAS,EAAE,EADgB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAA7B;AAKA,eAAeZ,aAAf","sourcesContent":["\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classname from 'classnames';\r\nimport FadeIn from 'react-fade-in';\r\nimport './styles.scss';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { ImageCard, ImageModal } from '../../../components';\r\n\r\nclass ImageCardList extends Component {\r\n\r\n  state = {\r\n    showPopup: false,\r\n    handleImageClicked: ''\r\n  }\r\n\r\n  handleShowPopup = (status, imageData) => {\r\n    this.setState({\r\n      showPopup: !status,\r\n      handleImageClicked: imageData\r\n    });\r\n  };\r\n\r\n  handleClosePopup = (status) => {\r\n    this.setState({\r\n      showPopup: !status\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleShowPopup,\r\n      handleClosePopup,\r\n      state: {\r\n        showPopup,\r\n        handleImageClicked\r\n      },\r\n      props: {\r\n        className,\r\n        data\r\n      }\r\n    } = this;\r\n    const classNames = classname('ds-image-card-list', className);\r\n\r\n    return (\r\n      <FadeIn>\r\n        <div className={classNames}>\r\n          {data.length > 0 ? (\r\n            <Fragment>\r\n              {data.map(image => {\r\n                if(image.data.imageUrl === 'null'){\r\n                  return (\r\n                    <div></div>\r\n                  )\r\n                }\r\n                else {\r\n                  return (\r\n                    <LazyLoad height={50} debounce={150} offset={50} key={image.data.imageUrl}>\r\n                      <ImageCard\r\n                        imageCard={image.data.imageUrl}\r\n                        handleShowPopup={handleShowPopup}\r\n                      />\r\n                    </LazyLoad>\r\n                  );\r\n                }\r\n              })}\r\n            </Fragment>\r\n          ) : (\r\n              <p>INI LOADING</p>\r\n            )}\r\n        </div>\r\n\r\n        {/* Pop Up Image */}\r\n        <ImageModal\r\n          image={handleImageClicked}\r\n          showPopup={showPopup}\r\n          handleClosePopup={handleClosePopup}\r\n        />\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nImageCardList.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.shape({\r\n    imageId: PropTypes.string,\r\n    imageCard: PropTypes.string,\r\n  })\r\n}\r\n\r\nImageCardList.defaultProps = {\r\n  className: '',\r\n  data: [],\r\n}\r\n\r\nexport default ImageCardList;\r\n"]},"metadata":{},"sourceType":"module"}