{"ast":null,"code":"import _defineProperty from \"C:\\\\File Ch\\\\react-js-firebase-crud-invoice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  popup: false,\n  isLogin: false,\n  isLoading: false,\n  user: {},\n  errorMessage: '',\n  notes: []\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGE_POPUP') {\n    return _objectSpread({}, state, {\n      popup: action.value\n    });\n  }\n\n  if (action.type === 'CHANGE_ISLOGIN') {\n    return _objectSpread({}, state, {\n      isLogin: action.value\n    });\n  }\n\n  if (action.type === 'CHANGE_USER') {\n    return _objectSpread({}, state, {\n      user: action.value\n    });\n  }\n\n  if (action.type === 'CHANGE_LOADING') {\n    return _objectSpread({}, state, {\n      isLoading: action.value\n    });\n  }\n\n  if (action.type === 'SHOW_ERRORMESSAGE') {\n    return _objectSpread({}, state, {\n      errorMessage: action.value\n    });\n  }\n\n  if (action.type === 'SET_NOTES') {\n    return _objectSpread({}, state, {\n      notes: action.value\n    });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/File Ch/react-js-firebase-crud-invoice/src/config/redux/reducer/index.js"],"names":["initialState","popup","isLogin","isLoading","user","errorMessage","notes","reducer","state","action","type","value"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,KADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,6BACKF,KADL;AAEEP,MAAAA,KAAK,EAAEQ,MAAM,CAACE;AAFhB;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,6BACKF,KADL;AAEEN,MAAAA,OAAO,EAAEO,MAAM,CAACE;AAFlB;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,6BACKF,KADL;AAEEJ,MAAAA,IAAI,EAAEK,MAAM,CAACE;AAFf;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,6BACKF,KADL;AAEEL,MAAAA,SAAS,EAAEM,MAAM,CAACE;AAFpB;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AACvC,6BACKF,KADL;AAEEH,MAAAA,YAAY,EAAEI,MAAM,CAACE;AAFvB;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,6BACKF,KADL;AAEEF,MAAAA,KAAK,EAAEG,MAAM,CAACE;AAFhB;AAID;;AAED,SAAOH,KAAP;AACD,CA5CD;;AA8CA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n  popup: false,\r\n  isLogin: false,\r\n  isLoading: false,\r\n  user: {},\r\n  errorMessage: '',\r\n  notes: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === 'CHANGE_POPUP') {\r\n    return {\r\n      ...state,\r\n      popup: action.value\r\n    }\r\n  }\r\n\r\n  if (action.type === 'CHANGE_ISLOGIN') {\r\n    return {\r\n      ...state,\r\n      isLogin: action.value\r\n    }\r\n  }\r\n\r\n  if (action.type === 'CHANGE_USER') {\r\n    return {\r\n      ...state,\r\n      user: action.value\r\n    }\r\n  }\r\n\r\n  if (action.type === 'CHANGE_LOADING') {\r\n    return {\r\n      ...state,\r\n      isLoading: action.value\r\n    }\r\n  }\r\n\r\n  if (action.type === 'SHOW_ERRORMESSAGE') {\r\n    return {\r\n      ...state,\r\n      errorMessage: action.value\r\n    }\r\n  }\r\n\r\n  if (action.type === 'SET_NOTES') {\r\n    return {\r\n      ...state,\r\n      notes: action.value\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}